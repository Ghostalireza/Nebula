<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>NetworkNode3D._PhysicsProcess Method</title><meta name="Title" content="_PhysicsProcess" /><meta name="Help.Id" content="M:HLNC.NetworkNode3D._PhysicsProcess(System.Double)" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="HLNC" /><meta name="guid" content="M_HLNC_NetworkNode3D__PhysicsProcess" /><meta name="Description" content="Called during the physics processing step of the main loop. Physics processing means that the frame rate is synced to the physics, i.e. the variable should be constant. is in seconds." /><meta name="tocFile" content="../toc/IDCFC.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">HLNC Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Network<wbr />Node<wbr />3D<span id="LST20CB81F4_0" data-languageSpecificText="cpp=::|nu=."></span>_Physics<wbr />Process Method</h1><div class="summary"><p>Called during the physics processing step of the main loop. Physics processing means that the frame rate is synced to the physics, i.e. the <span class="parameter">delta</span> variable should be constant. <span class="parameter">delta</span> is in seconds.</p><p>It is only called if physics processing is enabled, which is done automatically if this method is overridden, and can be toggled with <span class="noLink">SetPhysicsProcess(Boolean)</span>.</p><p>Corresponds to the <span class="noLink">NotificationPhysicsProcess</span> notification in <span class="noLink">_Notification(Int32)</span>.</p><p><b>Note:</b> This method is only called if the node is present in the scene tree (i.e. if it's not an orphan).</p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_HLNC.htm">HLNC</a><br /><strong>Assembly:</strong> HLNC (in HLNC.dll) Version: 1.0.0+e9264488a0873b3cee90d39a6afd99692fe7a268<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="identifier">_PhysicsProcess</span>(
	<span class="identifier">double</span> <span class="parameter">delta</span>
)</code></pre></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">delta</span>  <a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a></dt><dd><p class="missing">[Missing &lt;param name="delta"/&gt; documentation for "M:HLNC.NetworkNode3D._PhysicsProcess(System.Double)"]</p></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="T_HLNC_NetworkNode3D.htm">NetworkNode3D Class</a></div><div><a href="N_HLNC.htm">HLNC Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p><a href="https://raw.githubusercontent.com/Heavenlode/HLNC/main/LICENSE" target="_blank" rel="noopener noreferrer">MIT Licensed</a></p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>