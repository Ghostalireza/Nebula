<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>NetworkNode3D Class</title><meta name="Title" content="NetworkNode3D" /><meta name="Help.Id" content="T:HLNC.NetworkNode3D" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="HLNC" /><meta name="guid" content="T_HLNC_NetworkNode3D" /><meta name="Description" content="Node3D, extended with HLNC networking capabilities. This is the most basic networked 3D object. On every network tick, all NetworkNode3D nodes in the scene tree automatically have their network properties updated with the latest data from the server." /><meta name="tocFile" content="../toc/IDC.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">HLNC Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Network<wbr />Node<wbr />3D Class</h1><div class="summary"><span class="noLink">Node3D</span>, extended with HLNC networking capabilities. This is the most basic networked 3D object.
                    On every network tick, all NetworkNode3D nodes in the scene tree automatically have their <a href="T_HLNC_NetworkProperty.htm">network properties</a> updated with the latest data from the server.
                    Then, the special <a href="M_HLNC_NetworkNode3D__NetworkProcess.htm">NetworkProcess</a> method is called, which indicates that a network Tick is occurring.
                    Network properties can only update on the server side.
                    For a client to update network properties, they must send client inputs to the server via implementing the <a href="T_HLNC_INetworkInputHandler.htm">INetworkInputHandler</a> interface.
                    The server receives client inputs, can access them via <a href="M_HLNC_NetworkNode3D_GetInput.htm">GetInput<span id="LST16EF3185_0" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>, and handle them accordingly within <a href="M_HLNC_NetworkNode3D__NetworkProcess.htm">NetworkProcess</a> to mutate state.
                    </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_HLNC.htm">HLNC</a><br /><strong>Assembly:</strong> HLNC (in HLNC.dll) Version: 1.0.0+67fc7a7b454bc0ade857a4ae4930fb238e351d35<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">NetworkNode3D</span> : <span class="identifier">Node3D</span>, 
	<span class="identifier">IStateSerializable</span>, <span class="identifier">INotifyPropertyChanged</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">GodotObject</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">Node</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">Node3D</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">NetworkNode3D</span></dd></dl><dl class="inheritanceHierarchy"><dt>Derived</dt><dd><div><a href="T_HLNC_Utilities_NetworkAnimationPlayer.htm">HLNC.Utilities<span id="LST16EF3185_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>NetworkAnimationPlayer</a></div><div><a href="T_HLNC_Utilities_NetworkTransform.htm">HLNC.Utilities<span id="LST16EF3185_2" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>NetworkTransform</a></div></dd></dl><dl class="implementsList"><dt>Implements</dt><dd><a href="T_HLNC_Serialization_Serializers_IStateSerializable.htm">IStateSerializable</a>, <a href="https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged" target="_blank" rel="noopener noreferrer">INotifyPropertyChanged</a></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Constructors</h2><div id="IDDFASection"><table id="ConstructorList" class="table is-hoverable"><tr><td><a href="M_HLNC_NetworkNode3D__ctor.htm">NetworkNode3D</a></td><td>Initializes a new instance of the <span class="selflink">NetworkNode3D</span> class</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="IDQFASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="P_HLNC_NetworkNode3D_DynamicSpawn.htm">DynamicSpawn</a></td><td> </td></tr><tr><td><a href="P_HLNC_NetworkNode3D_InputAuthority.htm">InputAuthority</a></td><td> </td></tr><tr><td><a href="P_HLNC_NetworkNode3D_IsCurrentOwner.htm">IsCurrentOwner</a></td><td> </td></tr><tr><td><a href="P_HLNC_NetworkNode3D_IsNetworkReady.htm">IsNetworkReady</a></td><td> </td></tr><tr><td><a href="P_HLNC_NetworkNode3D_IsNetworkScene.htm">IsNetworkScene</a></td><td> </td></tr><tr><td><a href="P_HLNC_NetworkNode3D_NetworkId.htm">NetworkId</a></td><td> </td></tr><tr><td><a href="P_HLNC_NetworkNode3D_NetworkParent.htm">NetworkParent</a></td><td> </td></tr><tr><td><a href="P_HLNC_NetworkNode3D_NetworkParentId.htm">NetworkParentId</a></td><td> </td></tr><tr><td><a href="P_HLNC_NetworkNode3D_Serializers.htm">Serializers</a></td><td> </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDEFASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="M_HLNC_NetworkNode3D__ExitTree.htm">_ExitTree</a></td><td><p>Called when the node is about to leave the <span class="noLink">SceneTree</span> (e.g. upon freeing, scene changing, or after calling <span class="noLink">RemoveChild(Node)</span> in a script). If the node has children, its <span class="noLink">_ExitTree<span id="LST16EF3185_3" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span> callback will be called last, after all its children have left the tree.</p><p>Corresponds to the <span class="noLink">NotificationExitTree</span> notification in <span class="noLink">_Notification(Int32)</span> and signal <span class="noLink">TreeExiting</span>. To get notified when the node has already left the active tree, connect to the <span class="noLink">TreeExited</span>.</p><br />(Overrides <span class="noLink">Node._ExitTree<span id="LST16EF3185_4" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>)</td></tr><tr><td><a href="M_HLNC_NetworkNode3D__NetworkPrepare.htm">_NetworkPrepare</a></td><td> </td></tr><tr><td><a href="M_HLNC_NetworkNode3D__NetworkProcess.htm">_NetworkProcess</a></td><td> </td></tr><tr><td><a href="M_HLNC_NetworkNode3D__NetworkReady.htm">_NetworkReady</a></td><td> </td></tr><tr><td><a href="M_HLNC_NetworkNode3D__PhysicsProcess.htm">_PhysicsProcess</a></td><td><p>Called during the physics processing step of the main loop. Physics processing means that the frame rate is synced to the physics, i.e. the <span class="parameter">delta</span> variable should be constant. <span class="parameter">delta</span> is in seconds.</p><p>It is only called if physics processing is enabled, which is done automatically if this method is overridden, and can be toggled with <span class="noLink">SetPhysicsProcess(Boolean)</span>.</p><p>Corresponds to the <span class="noLink">NotificationPhysicsProcess</span> notification in <span class="noLink">_Notification(Int32)</span>.</p><p><b>Note:</b> This method is only called if the node is present in the scene tree (i.e. if it's not an orphan).</p><br />(Overrides <span class="noLink">Node._PhysicsProcess(Double)</span>)</td></tr><tr><td><a href="M_HLNC_NetworkNode3D_Despawn.htm">Despawn</a></td><td> </td></tr><tr><td><a href="M_HLNC_NetworkNode3D_FindFromChild.htm">FindFromChild</a></td><td> </td></tr><tr><td><a href="M_HLNC_NetworkNode3D_FromJSON.htm">FromJSON</a></td><td> </td></tr><tr><td><a href="M_HLNC_NetworkNode3D_GetInput.htm">GetInput</a></td><td> </td></tr><tr><td><a href="M_HLNC_NetworkNode3D_GetNetworkChildren.htm">GetNetworkChildren</a></td><td> </td></tr><tr><td><a href="M_HLNC_NetworkNode3D_OnPropertyChanged.htm">OnPropertyChanged(PropertyChangedEventArgs)</a></td><td> </td></tr><tr><td><a href="M_HLNC_NetworkNode3D_OnPropertyChanged_1.htm">OnPropertyChanged(String)</a></td><td> </td></tr><tr><td><a href="M_HLNC_NetworkNode3D_ToJSON.htm">ToJSON</a></td><td> </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Events</h2><div id="IDAFASection"><table id="EventList" class="table is-hoverable"><tr><td><a href="E_HLNC_NetworkNode3D_NetworkPropertyChanged.htm">NetworkPropertyChanged</a></td><td> </td></tr><tr><td><a href="E_HLNC_NetworkNode3D_PropertyChanged.htm">PropertyChanged</a></td><td> </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Fields</h2><div id="IDCFASection"><table id="FieldList" class="table is-hoverable"><tr><td><a href="F_HLNC_NetworkNode3D_Interest.htm">Interest</a></td><td> </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="N_HLNC.htm">HLNC Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Constructors</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Events</a></li><li><a class="quickLink">Fields</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p><a href="https://raw.githubusercontent.com/Heavenlode/HLNC/main/LICENSE" target="_blank" rel="noopener noreferrer">MIT Licensed</a></p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>