<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>NetworkVisibility Events</title><meta name="Title" content="Events" /><meta name="Help.Id" content="Events.T:HLNC.Utilities.NetworkVisibility" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="HLNC.Utilities" /><meta name="guid" content="a1e2b0c6-7fde-7fe2-a75d-867706587a40" /><meta name="tocFile" content="../toc/IDCF.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">A Sandcastle Documented Class Library</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Network<wbr />Visibility Events</h1><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Events</h2><div id="IDADASection"><table id="EventList" class="table is-hoverable"><tr><td><span class="noLink">ChildEnteredTree</span></td><td><p>Emitted when the child <span class="code">node</span> enters the <span class="noLink">SceneTree</span>, usually because this node entered the tree (see <span class="noLink">TreeEntered</span>), or <span class="noLink">AddChild(Node, Boolean, InternalMode)</span> has been called.</p><p>This signal is emitted <i>after</i> the child node's own <span class="noLink">NotificationEnterTree</span> and <span class="noLink">TreeEntered</span>.</p><br />(Inherited from <span class="noLink">Node</span>)</td></tr><tr><td><span class="noLink">ChildExitingTree</span></td><td><p>Emitted when the child <span class="code">node</span> is about to exit the <span class="noLink">SceneTree</span>, usually because this node is exiting the tree (see <span class="noLink">TreeExiting</span>), or because the child <span class="code">node</span> is being removed or freed.</p><p>When this signal is received, the child <span class="code">node</span> is still accessible inside the tree. This signal is emitted <i>after</i> the child node's own <span class="noLink">TreeExiting</span> and <span class="noLink">NotificationExitTree</span>.</p><br />(Inherited from <span class="noLink">Node</span>)</td></tr><tr><td><span class="noLink">ChildOrderChanged</span></td><td><p>Emitted when the list of children is changed. This happens when child nodes are added, moved or removed.</p><br />(Inherited from <span class="noLink">Node</span>)</td></tr><tr><td><span class="noLink">EditorDescriptionChanged</span></td><td><p>Emitted when the node's editor description field changed.</p><br />(Inherited from <span class="noLink">Node</span>)</td></tr><tr><td><span class="noLink">PropertyListChanged</span></td><td><p>Emitted when <span class="noLink">NotifyPropertyListChanged<span id="LST5364D741_0" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span> is called.</p><br />(Inherited from <span class="noLink">GodotObject</span>)</td></tr><tr><td><span class="noLink">Ready</span></td><td><p>Emitted when the node is considered ready, after <span class="noLink">_Ready<span id="LST5364D741_1" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span> is called.</p><br />(Inherited from <span class="noLink">Node</span>)</td></tr><tr><td><span class="noLink">Renamed</span></td><td><p>Emitted when the node's <span class="noLink">Name</span> is changed, if the node is inside the tree.</p><br />(Inherited from <span class="noLink">Node</span>)</td></tr><tr><td><span class="noLink">ReplacingBy</span></td><td><p>Emitted when this node is being replaced by the <span class="code">node</span>, see <span class="noLink">ReplaceBy(Node, Boolean)</span>.</p><p>This signal is emitted <i>after</i><span class="code">node</span> has been added as a child of the original parent node, but <i>before</i> all original child nodes have been reparented to <span class="code">node</span>.</p><br />(Inherited from <span class="noLink">Node</span>)</td></tr><tr><td><span class="noLink">ScriptChanged</span></td><td><p>Emitted when the object's script is changed.</p><p><b>Note:</b> When this signal is emitted, the new script is not initialized yet. If you need to access the new script, defer connections to this signal with <span class="noLink">Deferred</span>.</p><br />(Inherited from <span class="noLink">GodotObject</span>)</td></tr><tr><td><span class="noLink">TreeEntered</span></td><td><p>Emitted when the node enters the tree.</p><p>This signal is emitted <i>after</i> the related <span class="noLink">NotificationEnterTree</span> notification.</p><br />(Inherited from <span class="noLink">Node</span>)</td></tr><tr><td><span class="noLink">TreeExited</span></td><td><p>Emitted after the node exits the tree and is no longer active.</p><p>This signal is emitted <i>after</i> the related <span class="noLink">NotificationExitTree</span> notification.</p><br />(Inherited from <span class="noLink">Node</span>)</td></tr><tr><td><span class="noLink">TreeExiting</span></td><td><p>Emitted when the node is just about to exit the tree. The node is still valid. As such, this is the right place for de-initialization (or a "destructor", if you will).</p><p>This signal is emitted <i>after</i> the node's <span class="noLink">_ExitTree<span id="LST5364D741_2" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>, and <i>before</i> the related <span class="noLink">NotificationExitTree</span>.</p><br />(Inherited from <span class="noLink">Node</span>)</td></tr><tr><td><span class="noLink">VisibilityChanged</span></td><td><p>Emitted when node visibility changes.</p><br />(Inherited from <span class="noLink">Node3D</span>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="8e5e6efd-e80e-1c5e-321f-013e6648a33e.htm">NetworkVisibility Class</a></div><div><a href="dcf993b2-221c-083c-5789-323a729e3f9a.htm">HLNC.Utilities Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Events</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>