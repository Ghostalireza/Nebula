### YamlMime:ManagedReference
items:
- uid: Nebula.NetPose3D
  commentId: T:Nebula.NetPose3D
  id: NetPose3D
  parent: Nebula
  children:
  - Nebula.NetPose3D.#ctor
  - Nebula.NetPose3D.ApplyDelta(Godot.Vector3,Godot.Vector3)
  - Nebula.NetPose3D.ApplyKeyframe(Godot.Vector3,Godot.Vector3)
  - Nebula.NetPose3D.BsonDeserialize(Godot.Variant,System.Byte[],Nebula.NetPose3D)
  - Nebula.NetPose3D.BsonSerialize(Godot.Variant)
  - Nebula.NetPose3D.ClientState
  - Nebula.NetPose3D.EmitSignalOnChange
  - Nebula.NetPose3D.GetDeserializeContext(Nebula.NetPose3D)
  - Nebula.NetPose3D.KeyframeFrequency
  - Nebula.NetPose3D.NetworkDeserialize(Nebula.WorldRunner,Godot.ENetPacketPeer,Nebula.Serialization.HLBuffer,Godot.Variant)
  - Nebula.NetPose3D.NetworkProcess(Nebula.WorldRunner)
  - Nebula.NetPose3D.NetworkSerialize(Nebula.WorldRunner,Godot.ENetPacketPeer,Nebula.NetPose3D)
  - Nebula.NetPose3D.OnChange
  - Nebula.NetPose3D.Owner
  - Nebula.NetPose3D.Position
  - Nebula.NetPose3D.Rotation
  langs:
  - csharp
  - vb
  name: NetPose3D
  nameWithType: NetPose3D
  fullName: Nebula.NetPose3D
  type: Class
  source:
    href: https://github.com/Heavenlode/Nebula/blob/6934753158e75e4cbe917368b26a15034ea45ff3/.godot/mono/temp/obj/Debug/Godot.SourceGenerators/Godot.SourceGenerators.ScriptMethodsGenerator/Nebula.NetPose3D_ScriptMethods.generated.cs
  assemblies:
  - Nebula
  namespace: Nebula
  syntax:
    content: >-
      [ScriptPath("res://addons/Nebula/Core/Nodes/NetTransform/NetPose3D.cs")]

      public class NetPose3D : RefCounted, IDisposable, INetSerializable<NetPose3D>, IBsonSerializable<NetPose3D>, IBsonSerializableBase
    content.vb: >-
      <ScriptPath("res://addons/Nebula/Core/Nodes/NetTransform/NetPose3D.cs")>

      Public Class NetPose3D Inherits RefCounted Implements IDisposable, INetSerializable(Of NetPose3D), IBsonSerializable(Of NetPose3D), IBsonSerializableBase
  inheritance:
  - System.Object
  - Godot.GodotObject
  - Godot.RefCounted
  implements:
  - System.IDisposable
  - Nebula.Serialization.INetSerializable{Nebula.NetPose3D}
  - Nebula.Serialization.IBsonSerializable{Nebula.NetPose3D}
  - Nebula.Serialization.IBsonSerializableBase
  inheritedMembers:
  - Godot.RefCounted.InitRef
  - Godot.RefCounted.Reference
  - Godot.RefCounted.Unreference
  - Godot.RefCounted.GetReferenceCount
  - Godot.RefCounted.InvokeGodotClassMethod(Godot.NativeInterop.godot_string_name@,Godot.NativeInterop.NativeVariantPtrArgs,Godot.NativeInterop.godot_variant@)
  - Godot.RefCounted.HasGodotClassMethod(Godot.NativeInterop.godot_string_name@)
  - Godot.RefCounted.HasGodotClassSignal(Godot.NativeInterop.godot_string_name@)
  - Godot.GodotObject.NotificationPostinitialize
  - Godot.GodotObject.NotificationPredelete
  - Godot.GodotObject.NotificationExtensionReloaded
  - Godot.GodotObject.InstanceFromId(System.UInt64)
  - Godot.GodotObject.IsInstanceIdValid(System.UInt64)
  - Godot.GodotObject.IsInstanceValid(Godot.GodotObject)
  - Godot.GodotObject.WeakRef(Godot.GodotObject)
  - Godot.GodotObject.Dispose
  - Godot.GodotObject.Dispose(System.Boolean)
  - Godot.GodotObject.ToString
  - Godot.GodotObject.ToSignal(Godot.GodotObject,Godot.StringName)
  - Godot.GodotObject._Get(Godot.StringName)
  - Godot.GodotObject._GetPropertyList
  - Godot.GodotObject._IterGet(Godot.Variant)
  - Godot.GodotObject._IterInit(Godot.Collections.Array)
  - Godot.GodotObject._IterNext(Godot.Collections.Array)
  - Godot.GodotObject._Notification(System.Int32)
  - Godot.GodotObject._PropertyCanRevert(Godot.StringName)
  - Godot.GodotObject._PropertyGetRevert(Godot.StringName)
  - Godot.GodotObject._Set(Godot.StringName,Godot.Variant)
  - Godot.GodotObject._ValidateProperty(Godot.Collections.Dictionary)
  - Godot.GodotObject.Free
  - Godot.GodotObject.GetClass
  - Godot.GodotObject.IsClass(System.String)
  - Godot.GodotObject.Set(Godot.StringName,Godot.Variant)
  - Godot.GodotObject.Get(Godot.StringName)
  - Godot.GodotObject.SetIndexed(Godot.NodePath,Godot.Variant)
  - Godot.GodotObject.GetIndexed(Godot.NodePath)
  - Godot.GodotObject.GetPropertyList
  - Godot.GodotObject.GetMethodList
  - Godot.GodotObject.PropertyCanRevert(Godot.StringName)
  - Godot.GodotObject.PropertyGetRevert(Godot.StringName)
  - Godot.GodotObject.Notification(System.Int32,System.Boolean)
  - Godot.GodotObject.GetInstanceId
  - Godot.GodotObject.SetScript(Godot.Variant)
  - Godot.GodotObject.GetScript
  - Godot.GodotObject.SetMeta(Godot.StringName,Godot.Variant)
  - Godot.GodotObject.RemoveMeta(Godot.StringName)
  - Godot.GodotObject.GetMeta(Godot.StringName,Godot.Variant)
  - Godot.GodotObject.HasMeta(Godot.StringName)
  - Godot.GodotObject.GetMetaList
  - Godot.GodotObject.AddUserSignal(System.String,Godot.Collections.Array)
  - Godot.GodotObject.HasUserSignal(Godot.StringName)
  - Godot.GodotObject.RemoveUserSignal(Godot.StringName)
  - Godot.GodotObject.EmitSignal(Godot.StringName,Godot.Variant[])
  - Godot.GodotObject.EmitSignal(Godot.StringName,System.ReadOnlySpan{Godot.Variant})
  - Godot.GodotObject.Call(Godot.StringName,Godot.Variant[])
  - Godot.GodotObject.Call(Godot.StringName,System.ReadOnlySpan{Godot.Variant})
  - Godot.GodotObject.CallDeferred(Godot.StringName,Godot.Variant[])
  - Godot.GodotObject.CallDeferred(Godot.StringName,System.ReadOnlySpan{Godot.Variant})
  - Godot.GodotObject.SetDeferred(Godot.StringName,Godot.Variant)
  - Godot.GodotObject.Callv(Godot.StringName,Godot.Collections.Array)
  - Godot.GodotObject.HasMethod(Godot.StringName)
  - Godot.GodotObject.GetMethodArgumentCount(Godot.StringName)
  - Godot.GodotObject.HasSignal(Godot.StringName)
  - Godot.GodotObject.GetSignalList
  - Godot.GodotObject.GetSignalConnectionList(Godot.StringName)
  - Godot.GodotObject.GetIncomingConnections
  - Godot.GodotObject.Connect(Godot.StringName,Godot.Callable,System.UInt32)
  - Godot.GodotObject.Disconnect(Godot.StringName,Godot.Callable)
  - Godot.GodotObject.IsConnected(Godot.StringName,Godot.Callable)
  - Godot.GodotObject.HasConnections(Godot.StringName)
  - Godot.GodotObject.SetBlockSignals(System.Boolean)
  - Godot.GodotObject.IsBlockingSignals
  - Godot.GodotObject.NotifyPropertyListChanged
  - Godot.GodotObject.SetMessageTranslation(System.Boolean)
  - Godot.GodotObject.CanTranslateMessages
  - Godot.GodotObject.Tr(Godot.StringName,Godot.StringName)
  - Godot.GodotObject.TrN(Godot.StringName,Godot.StringName,System.Int32,Godot.StringName)
  - Godot.GodotObject.GetTranslationDomain
  - Godot.GodotObject.SetTranslationDomain(Godot.StringName)
  - Godot.GodotObject.IsQueuedForDeletion
  - Godot.GodotObject.CancelFree
  - Godot.GodotObject.EmitSignalScriptChanged
  - Godot.GodotObject.EmitSignalPropertyListChanged
  - Godot.GodotObject.NativeInstance
  - Godot.GodotObject.ScriptChanged
  - Godot.GodotObject.PropertyListChanged
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  attributes:
  - type: Godot.ScriptPathAttribute
    ctor: Godot.ScriptPathAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: res://addons/Nebula/Core/Nodes/NetTransform/NetPose3D.cs
- uid: Nebula.NetPose3D.KeyframeFrequency
  commentId: F:Nebula.NetPose3D.KeyframeFrequency
  id: KeyframeFrequency
  parent: Nebula.NetPose3D
  langs:
  - csharp
  - vb
  name: KeyframeFrequency
  nameWithType: NetPose3D.KeyframeFrequency
  fullName: Nebula.NetPose3D.KeyframeFrequency
  type: Field
  source:
    href: https://github.com/Heavenlode/Nebula/blob/6934753158e75e4cbe917368b26a15034ea45ff3/.godot/mono/temp/obj/Debug/Godot.SourceGenerators/Godot.SourceGenerators.ScriptMethodsGenerator/Nebula.NetPose3D_ScriptMethods.generated.cs
  assemblies:
  - Nebula
  namespace: Nebula
  syntax:
    content: public int KeyframeFrequency
    return:
      type: System.Int32
    content.vb: Public KeyframeFrequency As Integer
- uid: Nebula.NetPose3D.Owner
  commentId: F:Nebula.NetPose3D.Owner
  id: Owner
  parent: Nebula.NetPose3D
  langs:
  - csharp
  - vb
  name: Owner
  nameWithType: NetPose3D.Owner
  fullName: Nebula.NetPose3D.Owner
  type: Field
  source:
    href: https://github.com/Heavenlode/Nebula/blob/6934753158e75e4cbe917368b26a15034ea45ff3/.godot/mono/temp/obj/Debug/Godot.SourceGenerators/Godot.SourceGenerators.ScriptMethodsGenerator/Nebula.NetPose3D_ScriptMethods.generated.cs
  assemblies:
  - Nebula
  namespace: Nebula
  syntax:
    content: public ENetPacketPeer Owner
    return:
      type: Godot.ENetPacketPeer
    content.vb: Public Owner As ENetPacketPeer
- uid: Nebula.NetPose3D.#ctor
  commentId: M:Nebula.NetPose3D.#ctor
  id: '#ctor'
  parent: Nebula.NetPose3D
  langs:
  - csharp
  - vb
  name: NetPose3D()
  nameWithType: NetPose3D.NetPose3D()
  fullName: Nebula.NetPose3D.NetPose3D()
  type: Constructor
  source:
    href: https://github.com/Heavenlode/Nebula/blob/6934753158e75e4cbe917368b26a15034ea45ff3/addons/Nebula/Core/Nodes/NetTransform/NetPose3D.cs
  assemblies:
  - Nebula
  namespace: Nebula
  syntax:
    content: public NetPose3D()
    content.vb: Public Sub New()
  overload: Nebula.NetPose3D.#ctor*
  nameWithType.vb: NetPose3D.New()
  fullName.vb: Nebula.NetPose3D.New()
  name.vb: New()
- uid: Nebula.NetPose3D.ApplyDelta(Godot.Vector3,Godot.Vector3)
  commentId: M:Nebula.NetPose3D.ApplyDelta(Godot.Vector3,Godot.Vector3)
  id: ApplyDelta(Godot.Vector3,Godot.Vector3)
  parent: Nebula.NetPose3D
  langs:
  - csharp
  - vb
  name: ApplyDelta(Vector3, Vector3)
  nameWithType: NetPose3D.ApplyDelta(Vector3, Vector3)
  fullName: Nebula.NetPose3D.ApplyDelta(Godot.Vector3, Godot.Vector3)
  type: Method
  source:
    href: https://github.com/Heavenlode/Nebula/blob/6934753158e75e4cbe917368b26a15034ea45ff3/addons/Nebula/Core/Nodes/NetTransform/NetPose3D.cs
  assemblies:
  - Nebula
  namespace: Nebula
  summary: >-
    Applies a position and rotation change based on Vector3 values.

    Position deltas are sent as shorts with 0.1 unit precision, allowing ±3276.7 units per tick.

    Rotation deltas are sent as shorts with 0.01 degree precision, allowing ±327.67 degrees per tick.
  example: []
  syntax:
    content: public void ApplyDelta(Vector3 newPosition, Vector3 newRotation)
    parameters:
    - id: newPosition
      type: Godot.Vector3
      description: ''
    - id: newRotation
      type: Godot.Vector3
      description: ''
    content.vb: Public Sub ApplyDelta(newPosition As Vector3, newRotation As Vector3)
  overload: Nebula.NetPose3D.ApplyDelta*
- uid: Nebula.NetPose3D.ApplyKeyframe(Godot.Vector3,Godot.Vector3)
  commentId: M:Nebula.NetPose3D.ApplyKeyframe(Godot.Vector3,Godot.Vector3)
  id: ApplyKeyframe(Godot.Vector3,Godot.Vector3)
  parent: Nebula.NetPose3D
  langs:
  - csharp
  - vb
  name: ApplyKeyframe(Vector3, Vector3)
  nameWithType: NetPose3D.ApplyKeyframe(Vector3, Vector3)
  fullName: Nebula.NetPose3D.ApplyKeyframe(Godot.Vector3, Godot.Vector3)
  type: Method
  source:
    href: https://github.com/Heavenlode/Nebula/blob/6934753158e75e4cbe917368b26a15034ea45ff3/addons/Nebula/Core/Nodes/NetTransform/NetPose3D.cs
  assemblies:
  - Nebula
  namespace: Nebula
  syntax:
    content: public void ApplyKeyframe(Vector3 position, Vector3 rotation)
    parameters:
    - id: position
      type: Godot.Vector3
    - id: rotation
      type: Godot.Vector3
    content.vb: Public Sub ApplyKeyframe(position As Vector3, rotation As Vector3)
  overload: Nebula.NetPose3D.ApplyKeyframe*
- uid: Nebula.NetPose3D.NetworkProcess(Nebula.WorldRunner)
  commentId: M:Nebula.NetPose3D.NetworkProcess(Nebula.WorldRunner)
  id: NetworkProcess(Nebula.WorldRunner)
  parent: Nebula.NetPose3D
  langs:
  - csharp
  - vb
  name: NetworkProcess(WorldRunner)
  nameWithType: NetPose3D.NetworkProcess(WorldRunner)
  fullName: Nebula.NetPose3D.NetworkProcess(Nebula.WorldRunner)
  type: Method
  source:
    href: https://github.com/Heavenlode/Nebula/blob/6934753158e75e4cbe917368b26a15034ea45ff3/addons/Nebula/Core/Nodes/NetTransform/NetPose3D.cs
  assemblies:
  - Nebula
  namespace: Nebula
  syntax:
    content: public void NetworkProcess(WorldRunner currentWorld)
    parameters:
    - id: currentWorld
      type: Nebula.WorldRunner
    content.vb: Public Sub NetworkProcess(currentWorld As WorldRunner)
  overload: Nebula.NetPose3D.NetworkProcess*
- uid: Nebula.NetPose3D.NetworkSerialize(Nebula.WorldRunner,Godot.ENetPacketPeer,Nebula.NetPose3D)
  commentId: M:Nebula.NetPose3D.NetworkSerialize(Nebula.WorldRunner,Godot.ENetPacketPeer,Nebula.NetPose3D)
  id: NetworkSerialize(Nebula.WorldRunner,Godot.ENetPacketPeer,Nebula.NetPose3D)
  isEii: true
  parent: Nebula.NetPose3D
  langs:
  - csharp
  - vb
  name: NetworkSerialize(WorldRunner, ENetPacketPeer, NetPose3D)
  nameWithType: NetPose3D.NetworkSerialize(WorldRunner, ENetPacketPeer, NetPose3D)
  fullName: Nebula.NetPose3D.NetworkSerialize(Nebula.WorldRunner, Godot.ENetPacketPeer, Nebula.NetPose3D)
  type: Method
  source:
    href: https://github.com/Heavenlode/Nebula/blob/6934753158e75e4cbe917368b26a15034ea45ff3/addons/Nebula/Core/Nodes/NetTransform/NetPose3D.cs
  assemblies:
  - Nebula
  namespace: Nebula
  example: []
  syntax:
    content: static HLBuffer NetworkSerialize(WorldRunner currentWorld, ENetPacketPeer peer, NetPose3D obj)
    parameters:
    - id: currentWorld
      type: Nebula.WorldRunner
    - id: peer
      type: Godot.ENetPacketPeer
    - id: obj
      type: Nebula.NetPose3D
    return:
      type: Nebula.Serialization.HLBuffer
    content.vb: Shared Function NetworkSerialize(currentWorld As WorldRunner, peer As ENetPacketPeer, obj As NetPose3D) As HLBuffer
  overload: Nebula.NetPose3D.NetworkSerialize*
  implements:
  - Nebula.Serialization.INetSerializable{Nebula.NetPose3D}.NetworkSerialize(Nebula.WorldRunner,Godot.ENetPacketPeer,Nebula.NetPose3D)
- uid: Nebula.NetPose3D.GetDeserializeContext(Nebula.NetPose3D)
  commentId: M:Nebula.NetPose3D.GetDeserializeContext(Nebula.NetPose3D)
  id: GetDeserializeContext(Nebula.NetPose3D)
  isEii: true
  parent: Nebula.NetPose3D
  langs:
  - csharp
  - vb
  name: GetDeserializeContext(NetPose3D)
  nameWithType: NetPose3D.GetDeserializeContext(NetPose3D)
  fullName: Nebula.NetPose3D.GetDeserializeContext(Nebula.NetPose3D)
  type: Method
  source:
    href: https://github.com/Heavenlode/Nebula/blob/6934753158e75e4cbe917368b26a15034ea45ff3/addons/Nebula/Core/Nodes/NetTransform/NetPose3D.cs
  assemblies:
  - Nebula
  namespace: Nebula
  example: []
  syntax:
    content: static Variant GetDeserializeContext(NetPose3D obj)
    parameters:
    - id: obj
      type: Nebula.NetPose3D
    return:
      type: Godot.Variant
    content.vb: Shared Function GetDeserializeContext(obj As NetPose3D) As [Variant]
  overload: Nebula.NetPose3D.GetDeserializeContext*
  implements:
  - Nebula.Serialization.INetSerializable{Nebula.NetPose3D}.GetDeserializeContext(Nebula.NetPose3D)
- uid: Nebula.NetPose3D.NetworkDeserialize(Nebula.WorldRunner,Godot.ENetPacketPeer,Nebula.Serialization.HLBuffer,Godot.Variant)
  commentId: M:Nebula.NetPose3D.NetworkDeserialize(Nebula.WorldRunner,Godot.ENetPacketPeer,Nebula.Serialization.HLBuffer,Godot.Variant)
  id: NetworkDeserialize(Nebula.WorldRunner,Godot.ENetPacketPeer,Nebula.Serialization.HLBuffer,Godot.Variant)
  isEii: true
  parent: Nebula.NetPose3D
  langs:
  - csharp
  - vb
  name: NetworkDeserialize(WorldRunner, ENetPacketPeer, HLBuffer, Variant)
  nameWithType: NetPose3D.NetworkDeserialize(WorldRunner, ENetPacketPeer, HLBuffer, Variant)
  fullName: Nebula.NetPose3D.NetworkDeserialize(Nebula.WorldRunner, Godot.ENetPacketPeer, Nebula.Serialization.HLBuffer, Godot.Variant)
  type: Method
  source:
    href: https://github.com/Heavenlode/Nebula/blob/6934753158e75e4cbe917368b26a15034ea45ff3/addons/Nebula/Core/Nodes/NetTransform/NetPose3D.cs
  assemblies:
  - Nebula
  namespace: Nebula
  example: []
  syntax:
    content: static NetPose3D NetworkDeserialize(WorldRunner currentWorld, ENetPacketPeer peer, HLBuffer buffer, Variant ctx)
    parameters:
    - id: currentWorld
      type: Nebula.WorldRunner
    - id: peer
      type: Godot.ENetPacketPeer
    - id: buffer
      type: Nebula.Serialization.HLBuffer
    - id: ctx
      type: Godot.Variant
    return:
      type: Nebula.NetPose3D
    content.vb: Shared Function NetworkDeserialize(currentWorld As WorldRunner, peer As ENetPacketPeer, buffer As HLBuffer, ctx As [Variant]) As NetPose3D
  overload: Nebula.NetPose3D.NetworkDeserialize*
  implements:
  - Nebula.Serialization.INetSerializable{Nebula.NetPose3D}.NetworkDeserialize(Nebula.WorldRunner,Godot.ENetPacketPeer,Nebula.Serialization.HLBuffer,Godot.Variant)
- uid: Nebula.NetPose3D.BsonDeserialize(Godot.Variant,System.Byte[],Nebula.NetPose3D)
  commentId: M:Nebula.NetPose3D.BsonDeserialize(Godot.Variant,System.Byte[],Nebula.NetPose3D)
  id: BsonDeserialize(Godot.Variant,System.Byte[],Nebula.NetPose3D)
  isEii: true
  parent: Nebula.NetPose3D
  langs:
  - csharp
  - vb
  name: BsonDeserialize(Variant, byte[], NetPose3D)
  nameWithType: NetPose3D.BsonDeserialize(Variant, byte[], NetPose3D)
  fullName: Nebula.NetPose3D.BsonDeserialize(Godot.Variant, byte[], Nebula.NetPose3D)
  type: Method
  source:
    href: https://github.com/Heavenlode/Nebula/blob/6934753158e75e4cbe917368b26a15034ea45ff3/addons/Nebula/Core/Nodes/NetTransform/NetPose3D.cs
  assemblies:
  - Nebula
  namespace: Nebula
  example: []
  syntax:
    content: static NetPose3D BsonDeserialize(Variant context, byte[] bson, NetPose3D initialObject)
    parameters:
    - id: context
      type: Godot.Variant
    - id: bson
      type: System.Byte[]
    - id: initialObject
      type: Nebula.NetPose3D
    return:
      type: Nebula.NetPose3D
    content.vb: Shared Function BsonDeserialize(context As [Variant], bson As Byte(), initialObject As NetPose3D) As NetPose3D
  overload: Nebula.NetPose3D.BsonDeserialize*
  implements:
  - Nebula.Serialization.IBsonSerializable{Nebula.NetPose3D}.BsonDeserialize(Godot.Variant,System.Byte[],Nebula.NetPose3D)
  nameWithType.vb: NetPose3D.BsonDeserialize(Variant, Byte(), NetPose3D)
  fullName.vb: Nebula.NetPose3D.BsonDeserialize(Godot.Variant, Byte(), Nebula.NetPose3D)
  name.vb: BsonDeserialize(Variant, Byte(), NetPose3D)
- uid: Nebula.NetPose3D.BsonSerialize(Godot.Variant)
  commentId: M:Nebula.NetPose3D.BsonSerialize(Godot.Variant)
  id: BsonSerialize(Godot.Variant)
  parent: Nebula.NetPose3D
  langs:
  - csharp
  - vb
  name: BsonSerialize(Variant)
  nameWithType: NetPose3D.BsonSerialize(Variant)
  fullName: Nebula.NetPose3D.BsonSerialize(Godot.Variant)
  type: Method
  source:
    href: https://github.com/Heavenlode/Nebula/blob/6934753158e75e4cbe917368b26a15034ea45ff3/addons/Nebula/Core/Nodes/NetTransform/NetPose3D.cs
  assemblies:
  - Nebula
  namespace: Nebula
  example: []
  syntax:
    content: public BsonValue BsonSerialize(Variant context)
    parameters:
    - id: context
      type: Godot.Variant
    return:
      type: MongoDB.Bson.BsonValue
    content.vb: Public Function BsonSerialize(context As [Variant]) As BsonValue
  overload: Nebula.NetPose3D.BsonSerialize*
  implements:
  - Nebula.Serialization.IBsonSerializableBase.BsonSerialize(Godot.Variant)
- uid: Nebula.NetPose3D.EmitSignalOnChange
  commentId: M:Nebula.NetPose3D.EmitSignalOnChange
  id: EmitSignalOnChange
  parent: Nebula.NetPose3D
  langs:
  - csharp
  - vb
  name: EmitSignalOnChange()
  nameWithType: NetPose3D.EmitSignalOnChange()
  fullName: Nebula.NetPose3D.EmitSignalOnChange()
  type: Method
  source:
    href: https://github.com/Heavenlode/Nebula/blob/6934753158e75e4cbe917368b26a15034ea45ff3/.godot/mono/temp/obj/Debug/Godot.SourceGenerators/Godot.SourceGenerators.ScriptSignalsGenerator/Nebula.NetPose3D_ScriptSignals.generated.cs
  assemblies:
  - Nebula
  namespace: Nebula
  syntax:
    content: protected void EmitSignalOnChange()
    content.vb: Protected Sub EmitSignalOnChange()
  overload: Nebula.NetPose3D.EmitSignalOnChange*
- uid: Nebula.NetPose3D.Position
  commentId: P:Nebula.NetPose3D.Position
  id: Position
  parent: Nebula.NetPose3D
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: NetPose3D.Position
  fullName: Nebula.NetPose3D.Position
  type: Property
  source:
    href: https://github.com/Heavenlode/Nebula/blob/6934753158e75e4cbe917368b26a15034ea45ff3/addons/Nebula/Core/Nodes/NetTransform/NetPose3D.cs
  assemblies:
  - Nebula
  namespace: Nebula
  syntax:
    content: public Vector3 Position { get; }
    parameters: []
    return:
      type: Godot.Vector3
    content.vb: Public ReadOnly Property Position As Vector3
  overload: Nebula.NetPose3D.Position*
- uid: Nebula.NetPose3D.Rotation
  commentId: P:Nebula.NetPose3D.Rotation
  id: Rotation
  parent: Nebula.NetPose3D
  langs:
  - csharp
  - vb
  name: Rotation
  nameWithType: NetPose3D.Rotation
  fullName: Nebula.NetPose3D.Rotation
  type: Property
  source:
    href: https://github.com/Heavenlode/Nebula/blob/6934753158e75e4cbe917368b26a15034ea45ff3/addons/Nebula/Core/Nodes/NetTransform/NetPose3D.cs
  assemblies:
  - Nebula
  namespace: Nebula
  syntax:
    content: public Vector3 Rotation { get; }
    parameters: []
    return:
      type: Godot.Vector3
    content.vb: Public ReadOnly Property Rotation As Vector3
  overload: Nebula.NetPose3D.Rotation*
- uid: Nebula.NetPose3D.ClientState
  commentId: P:Nebula.NetPose3D.ClientState
  id: ClientState
  parent: Nebula.NetPose3D
  langs:
  - csharp
  - vb
  name: ClientState
  nameWithType: NetPose3D.ClientState
  fullName: Nebula.NetPose3D.ClientState
  type: Property
  source:
    href: https://github.com/Heavenlode/Nebula/blob/6934753158e75e4cbe917368b26a15034ea45ff3/addons/Nebula/Core/Nodes/NetTransform/NetPose3D.cs
  assemblies:
  - Nebula
  namespace: Nebula
  syntax:
    content: public NetPose3D.ChangeType ClientState { get; }
    parameters: []
    return:
      type: Nebula.NetPose3D.ChangeType
    content.vb: Public ReadOnly Property ClientState As NetPose3D.ChangeType
  overload: Nebula.NetPose3D.ClientState*
- uid: Nebula.NetPose3D.OnChange
  commentId: E:Nebula.NetPose3D.OnChange
  id: OnChange
  parent: Nebula.NetPose3D
  langs:
  - csharp
  - vb
  name: OnChange
  nameWithType: NetPose3D.OnChange
  fullName: Nebula.NetPose3D.OnChange
  type: Event
  source:
    href: https://github.com/Heavenlode/Nebula/blob/6934753158e75e4cbe917368b26a15034ea45ff3/.godot/mono/temp/obj/Debug/Godot.SourceGenerators/Godot.SourceGenerators.ScriptSignalsGenerator/Nebula.NetPose3D_ScriptSignals.generated.cs
  assemblies:
  - Nebula
  namespace: Nebula
  example: []
  syntax:
    content: public event NetPose3D.OnChangeEventHandler OnChange
    return:
      type: Nebula.NetPose3D.OnChangeEventHandler
    content.vb: Public Event OnChange As NetPose3D.OnChangeEventHandler
references:
- uid: Nebula
  commentId: N:Nebula
  isExternal: true
  href: Nebula.html
  name: Nebula
  nameWithType: Nebula
  fullName: Nebula
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Godot.GodotObject
  commentId: T:Godot.GodotObject
  parent: Godot
  isExternal: true
  name: GodotObject
  nameWithType: GodotObject
  fullName: Godot.GodotObject
- uid: Godot.RefCounted
  commentId: T:Godot.RefCounted
  parent: Godot
  isExternal: true
  name: RefCounted
  nameWithType: RefCounted
  fullName: Godot.RefCounted
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Nebula.Serialization.INetSerializable{Nebula.NetPose3D}
  commentId: T:Nebula.Serialization.INetSerializable{Nebula.NetPose3D}
  parent: Nebula.Serialization
  definition: Nebula.Serialization.INetSerializable`1
  href: Nebula.Serialization.INetSerializable-1.html
  name: INetSerializable<NetPose3D>
  nameWithType: INetSerializable<NetPose3D>
  fullName: Nebula.Serialization.INetSerializable<Nebula.NetPose3D>
  nameWithType.vb: INetSerializable(Of NetPose3D)
  fullName.vb: Nebula.Serialization.INetSerializable(Of Nebula.NetPose3D)
  name.vb: INetSerializable(Of NetPose3D)
  spec.csharp:
  - uid: Nebula.Serialization.INetSerializable`1
    name: INetSerializable
    isExternal: true
    href: Nebula.Serialization.INetSerializable-1.html
  - name: <
  - uid: Nebula.NetPose3D
    name: NetPose3D
    isExternal: true
    href: Nebula.NetPose3D.html
  - name: '>'
  spec.vb:
  - uid: Nebula.Serialization.INetSerializable`1
    name: INetSerializable
    isExternal: true
    href: Nebula.Serialization.INetSerializable-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Nebula.NetPose3D
    name: NetPose3D
    isExternal: true
    href: Nebula.NetPose3D.html
  - name: )
- uid: Nebula.Serialization.IBsonSerializable{Nebula.NetPose3D}
  commentId: T:Nebula.Serialization.IBsonSerializable{Nebula.NetPose3D}
  parent: Nebula.Serialization
  definition: Nebula.Serialization.IBsonSerializable`1
  href: Nebula.Serialization.IBsonSerializable-1.html
  name: IBsonSerializable<NetPose3D>
  nameWithType: IBsonSerializable<NetPose3D>
  fullName: Nebula.Serialization.IBsonSerializable<Nebula.NetPose3D>
  nameWithType.vb: IBsonSerializable(Of NetPose3D)
  fullName.vb: Nebula.Serialization.IBsonSerializable(Of Nebula.NetPose3D)
  name.vb: IBsonSerializable(Of NetPose3D)
  spec.csharp:
  - uid: Nebula.Serialization.IBsonSerializable`1
    name: IBsonSerializable
    isExternal: true
    href: Nebula.Serialization.IBsonSerializable-1.html
  - name: <
  - uid: Nebula.NetPose3D
    name: NetPose3D
    isExternal: true
    href: Nebula.NetPose3D.html
  - name: '>'
  spec.vb:
  - uid: Nebula.Serialization.IBsonSerializable`1
    name: IBsonSerializable
    isExternal: true
    href: Nebula.Serialization.IBsonSerializable-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Nebula.NetPose3D
    name: NetPose3D
    isExternal: true
    href: Nebula.NetPose3D.html
  - name: )
- uid: Nebula.Serialization.IBsonSerializableBase
  commentId: T:Nebula.Serialization.IBsonSerializableBase
  parent: Nebula.Serialization
  isExternal: true
  href: Nebula.Serialization.IBsonSerializableBase.html
  name: IBsonSerializableBase
  nameWithType: IBsonSerializableBase
  fullName: Nebula.Serialization.IBsonSerializableBase
- uid: Godot.RefCounted.InitRef
  commentId: M:Godot.RefCounted.InitRef
  parent: Godot.RefCounted
  isExternal: true
  name: InitRef()
  nameWithType: RefCounted.InitRef()
  fullName: Godot.RefCounted.InitRef()
  spec.csharp:
  - uid: Godot.RefCounted.InitRef
    name: InitRef
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.RefCounted.InitRef
    name: InitRef
    isExternal: true
  - name: (
  - name: )
- uid: Godot.RefCounted.Reference
  commentId: M:Godot.RefCounted.Reference
  parent: Godot.RefCounted
  isExternal: true
  name: Reference()
  nameWithType: RefCounted.Reference()
  fullName: Godot.RefCounted.Reference()
  spec.csharp:
  - uid: Godot.RefCounted.Reference
    name: Reference
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.RefCounted.Reference
    name: Reference
    isExternal: true
  - name: (
  - name: )
- uid: Godot.RefCounted.Unreference
  commentId: M:Godot.RefCounted.Unreference
  parent: Godot.RefCounted
  isExternal: true
  name: Unreference()
  nameWithType: RefCounted.Unreference()
  fullName: Godot.RefCounted.Unreference()
  spec.csharp:
  - uid: Godot.RefCounted.Unreference
    name: Unreference
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.RefCounted.Unreference
    name: Unreference
    isExternal: true
  - name: (
  - name: )
- uid: Godot.RefCounted.GetReferenceCount
  commentId: M:Godot.RefCounted.GetReferenceCount
  parent: Godot.RefCounted
  isExternal: true
  name: GetReferenceCount()
  nameWithType: RefCounted.GetReferenceCount()
  fullName: Godot.RefCounted.GetReferenceCount()
  spec.csharp:
  - uid: Godot.RefCounted.GetReferenceCount
    name: GetReferenceCount
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.RefCounted.GetReferenceCount
    name: GetReferenceCount
    isExternal: true
  - name: (
  - name: )
- uid: Godot.RefCounted.InvokeGodotClassMethod(Godot.NativeInterop.godot_string_name@,Godot.NativeInterop.NativeVariantPtrArgs,Godot.NativeInterop.godot_variant@)
  commentId: M:Godot.RefCounted.InvokeGodotClassMethod(Godot.NativeInterop.godot_string_name@,Godot.NativeInterop.NativeVariantPtrArgs,Godot.NativeInterop.godot_variant@)
  parent: Godot.RefCounted
  isExternal: true
  name: InvokeGodotClassMethod(in godot_string_name, NativeVariantPtrArgs, out godot_variant)
  nameWithType: RefCounted.InvokeGodotClassMethod(in godot_string_name, NativeVariantPtrArgs, out godot_variant)
  fullName: Godot.RefCounted.InvokeGodotClassMethod(in Godot.NativeInterop.godot_string_name, Godot.NativeInterop.NativeVariantPtrArgs, out Godot.NativeInterop.godot_variant)
  nameWithType.vb: RefCounted.InvokeGodotClassMethod(godot_string_name, NativeVariantPtrArgs, godot_variant)
  fullName.vb: Godot.RefCounted.InvokeGodotClassMethod(Godot.NativeInterop.godot_string_name, Godot.NativeInterop.NativeVariantPtrArgs, Godot.NativeInterop.godot_variant)
  name.vb: InvokeGodotClassMethod(godot_string_name, NativeVariantPtrArgs, godot_variant)
  spec.csharp:
  - uid: Godot.RefCounted.InvokeGodotClassMethod(Godot.NativeInterop.godot_string_name@,Godot.NativeInterop.NativeVariantPtrArgs,Godot.NativeInterop.godot_variant@)
    name: InvokeGodotClassMethod
    isExternal: true
  - name: (
  - name: in
  - name: " "
  - uid: Godot.NativeInterop.godot_string_name
    name: godot_string_name
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.NativeInterop.NativeVariantPtrArgs
    name: NativeVariantPtrArgs
    isExternal: true
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Godot.NativeInterop.godot_variant
    name: godot_variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.RefCounted.InvokeGodotClassMethod(Godot.NativeInterop.godot_string_name@,Godot.NativeInterop.NativeVariantPtrArgs,Godot.NativeInterop.godot_variant@)
    name: InvokeGodotClassMethod
    isExternal: true
  - name: (
  - uid: Godot.NativeInterop.godot_string_name
    name: godot_string_name
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.NativeInterop.NativeVariantPtrArgs
    name: NativeVariantPtrArgs
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.NativeInterop.godot_variant
    name: godot_variant
    isExternal: true
  - name: )
- uid: Godot.RefCounted.HasGodotClassMethod(Godot.NativeInterop.godot_string_name@)
  commentId: M:Godot.RefCounted.HasGodotClassMethod(Godot.NativeInterop.godot_string_name@)
  parent: Godot.RefCounted
  isExternal: true
  name: HasGodotClassMethod(in godot_string_name)
  nameWithType: RefCounted.HasGodotClassMethod(in godot_string_name)
  fullName: Godot.RefCounted.HasGodotClassMethod(in Godot.NativeInterop.godot_string_name)
  nameWithType.vb: RefCounted.HasGodotClassMethod(godot_string_name)
  fullName.vb: Godot.RefCounted.HasGodotClassMethod(Godot.NativeInterop.godot_string_name)
  name.vb: HasGodotClassMethod(godot_string_name)
  spec.csharp:
  - uid: Godot.RefCounted.HasGodotClassMethod(Godot.NativeInterop.godot_string_name@)
    name: HasGodotClassMethod
    isExternal: true
  - name: (
  - name: in
  - name: " "
  - uid: Godot.NativeInterop.godot_string_name
    name: godot_string_name
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.RefCounted.HasGodotClassMethod(Godot.NativeInterop.godot_string_name@)
    name: HasGodotClassMethod
    isExternal: true
  - name: (
  - uid: Godot.NativeInterop.godot_string_name
    name: godot_string_name
    isExternal: true
  - name: )
- uid: Godot.RefCounted.HasGodotClassSignal(Godot.NativeInterop.godot_string_name@)
  commentId: M:Godot.RefCounted.HasGodotClassSignal(Godot.NativeInterop.godot_string_name@)
  parent: Godot.RefCounted
  isExternal: true
  name: HasGodotClassSignal(in godot_string_name)
  nameWithType: RefCounted.HasGodotClassSignal(in godot_string_name)
  fullName: Godot.RefCounted.HasGodotClassSignal(in Godot.NativeInterop.godot_string_name)
  nameWithType.vb: RefCounted.HasGodotClassSignal(godot_string_name)
  fullName.vb: Godot.RefCounted.HasGodotClassSignal(Godot.NativeInterop.godot_string_name)
  name.vb: HasGodotClassSignal(godot_string_name)
  spec.csharp:
  - uid: Godot.RefCounted.HasGodotClassSignal(Godot.NativeInterop.godot_string_name@)
    name: HasGodotClassSignal
    isExternal: true
  - name: (
  - name: in
  - name: " "
  - uid: Godot.NativeInterop.godot_string_name
    name: godot_string_name
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.RefCounted.HasGodotClassSignal(Godot.NativeInterop.godot_string_name@)
    name: HasGodotClassSignal
    isExternal: true
  - name: (
  - uid: Godot.NativeInterop.godot_string_name
    name: godot_string_name
    isExternal: true
  - name: )
- uid: Godot.GodotObject.NotificationPostinitialize
  commentId: F:Godot.GodotObject.NotificationPostinitialize
  parent: Godot.GodotObject
  isExternal: true
  name: NotificationPostinitialize
  nameWithType: GodotObject.NotificationPostinitialize
  fullName: Godot.GodotObject.NotificationPostinitialize
- uid: Godot.GodotObject.NotificationPredelete
  commentId: F:Godot.GodotObject.NotificationPredelete
  parent: Godot.GodotObject
  isExternal: true
  name: NotificationPredelete
  nameWithType: GodotObject.NotificationPredelete
  fullName: Godot.GodotObject.NotificationPredelete
- uid: Godot.GodotObject.NotificationExtensionReloaded
  commentId: F:Godot.GodotObject.NotificationExtensionReloaded
  parent: Godot.GodotObject
  isExternal: true
  name: NotificationExtensionReloaded
  nameWithType: GodotObject.NotificationExtensionReloaded
  fullName: Godot.GodotObject.NotificationExtensionReloaded
- uid: Godot.GodotObject.InstanceFromId(System.UInt64)
  commentId: M:Godot.GodotObject.InstanceFromId(System.UInt64)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: InstanceFromId(ulong)
  nameWithType: GodotObject.InstanceFromId(ulong)
  fullName: Godot.GodotObject.InstanceFromId(ulong)
  nameWithType.vb: GodotObject.InstanceFromId(ULong)
  fullName.vb: Godot.GodotObject.InstanceFromId(ULong)
  name.vb: InstanceFromId(ULong)
  spec.csharp:
  - uid: Godot.GodotObject.InstanceFromId(System.UInt64)
    name: InstanceFromId
    isExternal: true
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.InstanceFromId(System.UInt64)
    name: InstanceFromId
    isExternal: true
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Godot.GodotObject.IsInstanceIdValid(System.UInt64)
  commentId: M:Godot.GodotObject.IsInstanceIdValid(System.UInt64)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: IsInstanceIdValid(ulong)
  nameWithType: GodotObject.IsInstanceIdValid(ulong)
  fullName: Godot.GodotObject.IsInstanceIdValid(ulong)
  nameWithType.vb: GodotObject.IsInstanceIdValid(ULong)
  fullName.vb: Godot.GodotObject.IsInstanceIdValid(ULong)
  name.vb: IsInstanceIdValid(ULong)
  spec.csharp:
  - uid: Godot.GodotObject.IsInstanceIdValid(System.UInt64)
    name: IsInstanceIdValid
    isExternal: true
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.IsInstanceIdValid(System.UInt64)
    name: IsInstanceIdValid
    isExternal: true
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Godot.GodotObject.IsInstanceValid(Godot.GodotObject)
  commentId: M:Godot.GodotObject.IsInstanceValid(Godot.GodotObject)
  parent: Godot.GodotObject
  isExternal: true
  name: IsInstanceValid(GodotObject)
  nameWithType: GodotObject.IsInstanceValid(GodotObject)
  fullName: Godot.GodotObject.IsInstanceValid(Godot.GodotObject)
  spec.csharp:
  - uid: Godot.GodotObject.IsInstanceValid(Godot.GodotObject)
    name: IsInstanceValid
    isExternal: true
  - name: (
  - uid: Godot.GodotObject
    name: GodotObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.IsInstanceValid(Godot.GodotObject)
    name: IsInstanceValid
    isExternal: true
  - name: (
  - uid: Godot.GodotObject
    name: GodotObject
    isExternal: true
  - name: )
- uid: Godot.GodotObject.WeakRef(Godot.GodotObject)
  commentId: M:Godot.GodotObject.WeakRef(Godot.GodotObject)
  parent: Godot.GodotObject
  isExternal: true
  name: WeakRef(GodotObject)
  nameWithType: GodotObject.WeakRef(GodotObject)
  fullName: Godot.GodotObject.WeakRef(Godot.GodotObject)
  spec.csharp:
  - uid: Godot.GodotObject.WeakRef(Godot.GodotObject)
    name: WeakRef
    isExternal: true
  - name: (
  - uid: Godot.GodotObject
    name: GodotObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.WeakRef(Godot.GodotObject)
    name: WeakRef
    isExternal: true
  - name: (
  - uid: Godot.GodotObject
    name: GodotObject
    isExternal: true
  - name: )
- uid: Godot.GodotObject.Dispose
  commentId: M:Godot.GodotObject.Dispose
  parent: Godot.GodotObject
  isExternal: true
  name: Dispose()
  nameWithType: GodotObject.Dispose()
  fullName: Godot.GodotObject.Dispose()
  spec.csharp:
  - uid: Godot.GodotObject.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.Dispose(System.Boolean)
  commentId: M:Godot.GodotObject.Dispose(System.Boolean)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Dispose(bool)
  nameWithType: GodotObject.Dispose(bool)
  fullName: Godot.GodotObject.Dispose(bool)
  nameWithType.vb: GodotObject.Dispose(Boolean)
  fullName.vb: Godot.GodotObject.Dispose(Boolean)
  name.vb: Dispose(Boolean)
  spec.csharp:
  - uid: Godot.GodotObject.Dispose(System.Boolean)
    name: Dispose
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Dispose(System.Boolean)
    name: Dispose
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.GodotObject.ToString
  commentId: M:Godot.GodotObject.ToString
  parent: Godot.GodotObject
  isExternal: true
  name: ToString()
  nameWithType: GodotObject.ToString()
  fullName: Godot.GodotObject.ToString()
  spec.csharp:
  - uid: Godot.GodotObject.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.ToSignal(Godot.GodotObject,Godot.StringName)
  commentId: M:Godot.GodotObject.ToSignal(Godot.GodotObject,Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: ToSignal(GodotObject, StringName)
  nameWithType: GodotObject.ToSignal(GodotObject, StringName)
  fullName: Godot.GodotObject.ToSignal(Godot.GodotObject, Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.ToSignal(Godot.GodotObject,Godot.StringName)
    name: ToSignal
    isExternal: true
  - name: (
  - uid: Godot.GodotObject
    name: GodotObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.ToSignal(Godot.GodotObject,Godot.StringName)
    name: ToSignal
    isExternal: true
  - name: (
  - uid: Godot.GodotObject
    name: GodotObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject._Get(Godot.StringName)
  commentId: M:Godot.GodotObject._Get(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: _Get(StringName)
  nameWithType: GodotObject._Get(StringName)
  fullName: Godot.GodotObject._Get(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject._Get(Godot.StringName)
    name: _Get
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject._Get(Godot.StringName)
    name: _Get
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject._GetPropertyList
  commentId: M:Godot.GodotObject._GetPropertyList
  parent: Godot.GodotObject
  isExternal: true
  name: _GetPropertyList()
  nameWithType: GodotObject._GetPropertyList()
  fullName: Godot.GodotObject._GetPropertyList()
  spec.csharp:
  - uid: Godot.GodotObject._GetPropertyList
    name: _GetPropertyList
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject._GetPropertyList
    name: _GetPropertyList
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject._IterGet(Godot.Variant)
  commentId: M:Godot.GodotObject._IterGet(Godot.Variant)
  parent: Godot.GodotObject
  isExternal: true
  name: _IterGet(Variant)
  nameWithType: GodotObject._IterGet(Variant)
  fullName: Godot.GodotObject._IterGet(Godot.Variant)
  spec.csharp:
  - uid: Godot.GodotObject._IterGet(Godot.Variant)
    name: _IterGet
    isExternal: true
  - name: (
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject._IterGet(Godot.Variant)
    name: _IterGet
    isExternal: true
  - name: (
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.GodotObject._IterInit(Godot.Collections.Array)
  commentId: M:Godot.GodotObject._IterInit(Godot.Collections.Array)
  parent: Godot.GodotObject
  isExternal: true
  name: _IterInit(Array)
  nameWithType: GodotObject._IterInit(Array)
  fullName: Godot.GodotObject._IterInit(Godot.Collections.Array)
  spec.csharp:
  - uid: Godot.GodotObject._IterInit(Godot.Collections.Array)
    name: _IterInit
    isExternal: true
  - name: (
  - uid: Godot.Collections.Array
    name: Array
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject._IterInit(Godot.Collections.Array)
    name: _IterInit
    isExternal: true
  - name: (
  - uid: Godot.Collections.Array
    name: Array
    isExternal: true
  - name: )
- uid: Godot.GodotObject._IterNext(Godot.Collections.Array)
  commentId: M:Godot.GodotObject._IterNext(Godot.Collections.Array)
  parent: Godot.GodotObject
  isExternal: true
  name: _IterNext(Array)
  nameWithType: GodotObject._IterNext(Array)
  fullName: Godot.GodotObject._IterNext(Godot.Collections.Array)
  spec.csharp:
  - uid: Godot.GodotObject._IterNext(Godot.Collections.Array)
    name: _IterNext
    isExternal: true
  - name: (
  - uid: Godot.Collections.Array
    name: Array
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject._IterNext(Godot.Collections.Array)
    name: _IterNext
    isExternal: true
  - name: (
  - uid: Godot.Collections.Array
    name: Array
    isExternal: true
  - name: )
- uid: Godot.GodotObject._Notification(System.Int32)
  commentId: M:Godot.GodotObject._Notification(System.Int32)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: _Notification(int)
  nameWithType: GodotObject._Notification(int)
  fullName: Godot.GodotObject._Notification(int)
  nameWithType.vb: GodotObject._Notification(Integer)
  fullName.vb: Godot.GodotObject._Notification(Integer)
  name.vb: _Notification(Integer)
  spec.csharp:
  - uid: Godot.GodotObject._Notification(System.Int32)
    name: _Notification
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Godot.GodotObject._Notification(System.Int32)
    name: _Notification
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Godot.GodotObject._PropertyCanRevert(Godot.StringName)
  commentId: M:Godot.GodotObject._PropertyCanRevert(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: _PropertyCanRevert(StringName)
  nameWithType: GodotObject._PropertyCanRevert(StringName)
  fullName: Godot.GodotObject._PropertyCanRevert(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject._PropertyCanRevert(Godot.StringName)
    name: _PropertyCanRevert
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject._PropertyCanRevert(Godot.StringName)
    name: _PropertyCanRevert
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject._PropertyGetRevert(Godot.StringName)
  commentId: M:Godot.GodotObject._PropertyGetRevert(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: _PropertyGetRevert(StringName)
  nameWithType: GodotObject._PropertyGetRevert(StringName)
  fullName: Godot.GodotObject._PropertyGetRevert(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject._PropertyGetRevert(Godot.StringName)
    name: _PropertyGetRevert
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject._PropertyGetRevert(Godot.StringName)
    name: _PropertyGetRevert
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject._Set(Godot.StringName,Godot.Variant)
  commentId: M:Godot.GodotObject._Set(Godot.StringName,Godot.Variant)
  parent: Godot.GodotObject
  isExternal: true
  name: _Set(StringName, Variant)
  nameWithType: GodotObject._Set(StringName, Variant)
  fullName: Godot.GodotObject._Set(Godot.StringName, Godot.Variant)
  spec.csharp:
  - uid: Godot.GodotObject._Set(Godot.StringName,Godot.Variant)
    name: _Set
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject._Set(Godot.StringName,Godot.Variant)
    name: _Set
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.GodotObject._ValidateProperty(Godot.Collections.Dictionary)
  commentId: M:Godot.GodotObject._ValidateProperty(Godot.Collections.Dictionary)
  parent: Godot.GodotObject
  isExternal: true
  name: _ValidateProperty(Dictionary)
  nameWithType: GodotObject._ValidateProperty(Dictionary)
  fullName: Godot.GodotObject._ValidateProperty(Godot.Collections.Dictionary)
  spec.csharp:
  - uid: Godot.GodotObject._ValidateProperty(Godot.Collections.Dictionary)
    name: _ValidateProperty
    isExternal: true
  - name: (
  - uid: Godot.Collections.Dictionary
    name: Dictionary
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject._ValidateProperty(Godot.Collections.Dictionary)
    name: _ValidateProperty
    isExternal: true
  - name: (
  - uid: Godot.Collections.Dictionary
    name: Dictionary
    isExternal: true
  - name: )
- uid: Godot.GodotObject.Free
  commentId: M:Godot.GodotObject.Free
  parent: Godot.GodotObject
  isExternal: true
  name: Free()
  nameWithType: GodotObject.Free()
  fullName: Godot.GodotObject.Free()
  spec.csharp:
  - uid: Godot.GodotObject.Free
    name: Free
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Free
    name: Free
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.GetClass
  commentId: M:Godot.GodotObject.GetClass
  parent: Godot.GodotObject
  isExternal: true
  name: GetClass()
  nameWithType: GodotObject.GetClass()
  fullName: Godot.GodotObject.GetClass()
  spec.csharp:
  - uid: Godot.GodotObject.GetClass
    name: GetClass
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetClass
    name: GetClass
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.IsClass(System.String)
  commentId: M:Godot.GodotObject.IsClass(System.String)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: IsClass(string)
  nameWithType: GodotObject.IsClass(string)
  fullName: Godot.GodotObject.IsClass(string)
  nameWithType.vb: GodotObject.IsClass(String)
  fullName.vb: Godot.GodotObject.IsClass(String)
  name.vb: IsClass(String)
  spec.csharp:
  - uid: Godot.GodotObject.IsClass(System.String)
    name: IsClass
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.IsClass(System.String)
    name: IsClass
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Godot.GodotObject.Set(Godot.StringName,Godot.Variant)
  commentId: M:Godot.GodotObject.Set(Godot.StringName,Godot.Variant)
  parent: Godot.GodotObject
  isExternal: true
  name: Set(StringName, Variant)
  nameWithType: GodotObject.Set(StringName, Variant)
  fullName: Godot.GodotObject.Set(Godot.StringName, Godot.Variant)
  spec.csharp:
  - uid: Godot.GodotObject.Set(Godot.StringName,Godot.Variant)
    name: Set
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Set(Godot.StringName,Godot.Variant)
    name: Set
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.GodotObject.Get(Godot.StringName)
  commentId: M:Godot.GodotObject.Get(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: Get(StringName)
  nameWithType: GodotObject.Get(StringName)
  fullName: Godot.GodotObject.Get(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.Get(Godot.StringName)
    name: Get
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Get(Godot.StringName)
    name: Get
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.SetIndexed(Godot.NodePath,Godot.Variant)
  commentId: M:Godot.GodotObject.SetIndexed(Godot.NodePath,Godot.Variant)
  parent: Godot.GodotObject
  isExternal: true
  name: SetIndexed(NodePath, Variant)
  nameWithType: GodotObject.SetIndexed(NodePath, Variant)
  fullName: Godot.GodotObject.SetIndexed(Godot.NodePath, Godot.Variant)
  spec.csharp:
  - uid: Godot.GodotObject.SetIndexed(Godot.NodePath,Godot.Variant)
    name: SetIndexed
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.SetIndexed(Godot.NodePath,Godot.Variant)
    name: SetIndexed
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.GodotObject.GetIndexed(Godot.NodePath)
  commentId: M:Godot.GodotObject.GetIndexed(Godot.NodePath)
  parent: Godot.GodotObject
  isExternal: true
  name: GetIndexed(NodePath)
  nameWithType: GodotObject.GetIndexed(NodePath)
  fullName: Godot.GodotObject.GetIndexed(Godot.NodePath)
  spec.csharp:
  - uid: Godot.GodotObject.GetIndexed(Godot.NodePath)
    name: GetIndexed
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetIndexed(Godot.NodePath)
    name: GetIndexed
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
- uid: Godot.GodotObject.GetPropertyList
  commentId: M:Godot.GodotObject.GetPropertyList
  parent: Godot.GodotObject
  isExternal: true
  name: GetPropertyList()
  nameWithType: GodotObject.GetPropertyList()
  fullName: Godot.GodotObject.GetPropertyList()
  spec.csharp:
  - uid: Godot.GodotObject.GetPropertyList
    name: GetPropertyList
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetPropertyList
    name: GetPropertyList
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.GetMethodList
  commentId: M:Godot.GodotObject.GetMethodList
  parent: Godot.GodotObject
  isExternal: true
  name: GetMethodList()
  nameWithType: GodotObject.GetMethodList()
  fullName: Godot.GodotObject.GetMethodList()
  spec.csharp:
  - uid: Godot.GodotObject.GetMethodList
    name: GetMethodList
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetMethodList
    name: GetMethodList
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.PropertyCanRevert(Godot.StringName)
  commentId: M:Godot.GodotObject.PropertyCanRevert(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: PropertyCanRevert(StringName)
  nameWithType: GodotObject.PropertyCanRevert(StringName)
  fullName: Godot.GodotObject.PropertyCanRevert(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.PropertyCanRevert(Godot.StringName)
    name: PropertyCanRevert
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.PropertyCanRevert(Godot.StringName)
    name: PropertyCanRevert
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.PropertyGetRevert(Godot.StringName)
  commentId: M:Godot.GodotObject.PropertyGetRevert(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: PropertyGetRevert(StringName)
  nameWithType: GodotObject.PropertyGetRevert(StringName)
  fullName: Godot.GodotObject.PropertyGetRevert(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.PropertyGetRevert(Godot.StringName)
    name: PropertyGetRevert
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.PropertyGetRevert(Godot.StringName)
    name: PropertyGetRevert
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.Notification(System.Int32,System.Boolean)
  commentId: M:Godot.GodotObject.Notification(System.Int32,System.Boolean)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Notification(int, bool)
  nameWithType: GodotObject.Notification(int, bool)
  fullName: Godot.GodotObject.Notification(int, bool)
  nameWithType.vb: GodotObject.Notification(Integer, Boolean)
  fullName.vb: Godot.GodotObject.Notification(Integer, Boolean)
  name.vb: Notification(Integer, Boolean)
  spec.csharp:
  - uid: Godot.GodotObject.Notification(System.Int32,System.Boolean)
    name: Notification
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Notification(System.Int32,System.Boolean)
    name: Notification
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.GodotObject.GetInstanceId
  commentId: M:Godot.GodotObject.GetInstanceId
  parent: Godot.GodotObject
  isExternal: true
  name: GetInstanceId()
  nameWithType: GodotObject.GetInstanceId()
  fullName: Godot.GodotObject.GetInstanceId()
  spec.csharp:
  - uid: Godot.GodotObject.GetInstanceId
    name: GetInstanceId
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetInstanceId
    name: GetInstanceId
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.SetScript(Godot.Variant)
  commentId: M:Godot.GodotObject.SetScript(Godot.Variant)
  parent: Godot.GodotObject
  isExternal: true
  name: SetScript(Variant)
  nameWithType: GodotObject.SetScript(Variant)
  fullName: Godot.GodotObject.SetScript(Godot.Variant)
  spec.csharp:
  - uid: Godot.GodotObject.SetScript(Godot.Variant)
    name: SetScript
    isExternal: true
  - name: (
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.SetScript(Godot.Variant)
    name: SetScript
    isExternal: true
  - name: (
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.GodotObject.GetScript
  commentId: M:Godot.GodotObject.GetScript
  parent: Godot.GodotObject
  isExternal: true
  name: GetScript()
  nameWithType: GodotObject.GetScript()
  fullName: Godot.GodotObject.GetScript()
  spec.csharp:
  - uid: Godot.GodotObject.GetScript
    name: GetScript
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetScript
    name: GetScript
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.SetMeta(Godot.StringName,Godot.Variant)
  commentId: M:Godot.GodotObject.SetMeta(Godot.StringName,Godot.Variant)
  parent: Godot.GodotObject
  isExternal: true
  name: SetMeta(StringName, Variant)
  nameWithType: GodotObject.SetMeta(StringName, Variant)
  fullName: Godot.GodotObject.SetMeta(Godot.StringName, Godot.Variant)
  spec.csharp:
  - uid: Godot.GodotObject.SetMeta(Godot.StringName,Godot.Variant)
    name: SetMeta
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.SetMeta(Godot.StringName,Godot.Variant)
    name: SetMeta
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.GodotObject.RemoveMeta(Godot.StringName)
  commentId: M:Godot.GodotObject.RemoveMeta(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: RemoveMeta(StringName)
  nameWithType: GodotObject.RemoveMeta(StringName)
  fullName: Godot.GodotObject.RemoveMeta(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.RemoveMeta(Godot.StringName)
    name: RemoveMeta
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.RemoveMeta(Godot.StringName)
    name: RemoveMeta
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.GetMeta(Godot.StringName,Godot.Variant)
  commentId: M:Godot.GodotObject.GetMeta(Godot.StringName,Godot.Variant)
  parent: Godot.GodotObject
  isExternal: true
  name: GetMeta(StringName, Variant)
  nameWithType: GodotObject.GetMeta(StringName, Variant)
  fullName: Godot.GodotObject.GetMeta(Godot.StringName, Godot.Variant)
  spec.csharp:
  - uid: Godot.GodotObject.GetMeta(Godot.StringName,Godot.Variant)
    name: GetMeta
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetMeta(Godot.StringName,Godot.Variant)
    name: GetMeta
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.GodotObject.HasMeta(Godot.StringName)
  commentId: M:Godot.GodotObject.HasMeta(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: HasMeta(StringName)
  nameWithType: GodotObject.HasMeta(StringName)
  fullName: Godot.GodotObject.HasMeta(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.HasMeta(Godot.StringName)
    name: HasMeta
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.HasMeta(Godot.StringName)
    name: HasMeta
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.GetMetaList
  commentId: M:Godot.GodotObject.GetMetaList
  parent: Godot.GodotObject
  isExternal: true
  name: GetMetaList()
  nameWithType: GodotObject.GetMetaList()
  fullName: Godot.GodotObject.GetMetaList()
  spec.csharp:
  - uid: Godot.GodotObject.GetMetaList
    name: GetMetaList
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetMetaList
    name: GetMetaList
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.AddUserSignal(System.String,Godot.Collections.Array)
  commentId: M:Godot.GodotObject.AddUserSignal(System.String,Godot.Collections.Array)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: AddUserSignal(string, Array)
  nameWithType: GodotObject.AddUserSignal(string, Array)
  fullName: Godot.GodotObject.AddUserSignal(string, Godot.Collections.Array)
  nameWithType.vb: GodotObject.AddUserSignal(String, Array)
  fullName.vb: Godot.GodotObject.AddUserSignal(String, Godot.Collections.Array)
  name.vb: AddUserSignal(String, Array)
  spec.csharp:
  - uid: Godot.GodotObject.AddUserSignal(System.String,Godot.Collections.Array)
    name: AddUserSignal
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Godot.Collections.Array
    name: Array
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.AddUserSignal(System.String,Godot.Collections.Array)
    name: AddUserSignal
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Godot.Collections.Array
    name: Array
    isExternal: true
  - name: )
- uid: Godot.GodotObject.HasUserSignal(Godot.StringName)
  commentId: M:Godot.GodotObject.HasUserSignal(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: HasUserSignal(StringName)
  nameWithType: GodotObject.HasUserSignal(StringName)
  fullName: Godot.GodotObject.HasUserSignal(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.HasUserSignal(Godot.StringName)
    name: HasUserSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.HasUserSignal(Godot.StringName)
    name: HasUserSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.RemoveUserSignal(Godot.StringName)
  commentId: M:Godot.GodotObject.RemoveUserSignal(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: RemoveUserSignal(StringName)
  nameWithType: GodotObject.RemoveUserSignal(StringName)
  fullName: Godot.GodotObject.RemoveUserSignal(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.RemoveUserSignal(Godot.StringName)
    name: RemoveUserSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.RemoveUserSignal(Godot.StringName)
    name: RemoveUserSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.EmitSignal(Godot.StringName,Godot.Variant[])
  commentId: M:Godot.GodotObject.EmitSignal(Godot.StringName,Godot.Variant[])
  parent: Godot.GodotObject
  isExternal: true
  name: EmitSignal(StringName, params Variant[])
  nameWithType: GodotObject.EmitSignal(StringName, params Variant[])
  fullName: Godot.GodotObject.EmitSignal(Godot.StringName, params Godot.Variant[])
  nameWithType.vb: GodotObject.EmitSignal(StringName, ParamArray Variant())
  fullName.vb: Godot.GodotObject.EmitSignal(Godot.StringName, ParamArray Godot.Variant())
  name.vb: EmitSignal(StringName, ParamArray Variant())
  spec.csharp:
  - uid: Godot.GodotObject.EmitSignal(Godot.StringName,Godot.Variant[])
    name: EmitSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.EmitSignal(Godot.StringName,Godot.Variant[])
    name: EmitSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Godot.GodotObject.EmitSignal(Godot.StringName,System.ReadOnlySpan{Godot.Variant})
  commentId: M:Godot.GodotObject.EmitSignal(Godot.StringName,System.ReadOnlySpan{Godot.Variant})
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: EmitSignal(StringName, ReadOnlySpan<Variant>)
  nameWithType: GodotObject.EmitSignal(StringName, ReadOnlySpan<Variant>)
  fullName: Godot.GodotObject.EmitSignal(Godot.StringName, System.ReadOnlySpan<Godot.Variant>)
  nameWithType.vb: GodotObject.EmitSignal(StringName, ReadOnlySpan(Of Variant))
  fullName.vb: Godot.GodotObject.EmitSignal(Godot.StringName, System.ReadOnlySpan(Of Godot.Variant))
  name.vb: EmitSignal(StringName, ReadOnlySpan(Of Variant))
  spec.csharp:
  - uid: Godot.GodotObject.EmitSignal(Godot.StringName,System.ReadOnlySpan{Godot.Variant})
    name: EmitSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.EmitSignal(Godot.StringName,System.ReadOnlySpan{Godot.Variant})
    name: EmitSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  - name: )
- uid: Godot.GodotObject.Call(Godot.StringName,Godot.Variant[])
  commentId: M:Godot.GodotObject.Call(Godot.StringName,Godot.Variant[])
  parent: Godot.GodotObject
  isExternal: true
  name: Call(StringName, params Variant[])
  nameWithType: GodotObject.Call(StringName, params Variant[])
  fullName: Godot.GodotObject.Call(Godot.StringName, params Godot.Variant[])
  nameWithType.vb: GodotObject.Call(StringName, ParamArray Variant())
  fullName.vb: Godot.GodotObject.Call(Godot.StringName, ParamArray Godot.Variant())
  name.vb: Call(StringName, ParamArray Variant())
  spec.csharp:
  - uid: Godot.GodotObject.Call(Godot.StringName,Godot.Variant[])
    name: Call
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Call(Godot.StringName,Godot.Variant[])
    name: Call
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Godot.GodotObject.Call(Godot.StringName,System.ReadOnlySpan{Godot.Variant})
  commentId: M:Godot.GodotObject.Call(Godot.StringName,System.ReadOnlySpan{Godot.Variant})
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: Call(StringName, ReadOnlySpan<Variant>)
  nameWithType: GodotObject.Call(StringName, ReadOnlySpan<Variant>)
  fullName: Godot.GodotObject.Call(Godot.StringName, System.ReadOnlySpan<Godot.Variant>)
  nameWithType.vb: GodotObject.Call(StringName, ReadOnlySpan(Of Variant))
  fullName.vb: Godot.GodotObject.Call(Godot.StringName, System.ReadOnlySpan(Of Godot.Variant))
  name.vb: Call(StringName, ReadOnlySpan(Of Variant))
  spec.csharp:
  - uid: Godot.GodotObject.Call(Godot.StringName,System.ReadOnlySpan{Godot.Variant})
    name: Call
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Call(Godot.StringName,System.ReadOnlySpan{Godot.Variant})
    name: Call
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  - name: )
- uid: Godot.GodotObject.CallDeferred(Godot.StringName,Godot.Variant[])
  commentId: M:Godot.GodotObject.CallDeferred(Godot.StringName,Godot.Variant[])
  parent: Godot.GodotObject
  isExternal: true
  name: CallDeferred(StringName, params Variant[])
  nameWithType: GodotObject.CallDeferred(StringName, params Variant[])
  fullName: Godot.GodotObject.CallDeferred(Godot.StringName, params Godot.Variant[])
  nameWithType.vb: GodotObject.CallDeferred(StringName, ParamArray Variant())
  fullName.vb: Godot.GodotObject.CallDeferred(Godot.StringName, ParamArray Godot.Variant())
  name.vb: CallDeferred(StringName, ParamArray Variant())
  spec.csharp:
  - uid: Godot.GodotObject.CallDeferred(Godot.StringName,Godot.Variant[])
    name: CallDeferred
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.CallDeferred(Godot.StringName,Godot.Variant[])
    name: CallDeferred
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Godot.GodotObject.CallDeferred(Godot.StringName,System.ReadOnlySpan{Godot.Variant})
  commentId: M:Godot.GodotObject.CallDeferred(Godot.StringName,System.ReadOnlySpan{Godot.Variant})
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: CallDeferred(StringName, ReadOnlySpan<Variant>)
  nameWithType: GodotObject.CallDeferred(StringName, ReadOnlySpan<Variant>)
  fullName: Godot.GodotObject.CallDeferred(Godot.StringName, System.ReadOnlySpan<Godot.Variant>)
  nameWithType.vb: GodotObject.CallDeferred(StringName, ReadOnlySpan(Of Variant))
  fullName.vb: Godot.GodotObject.CallDeferred(Godot.StringName, System.ReadOnlySpan(Of Godot.Variant))
  name.vb: CallDeferred(StringName, ReadOnlySpan(Of Variant))
  spec.csharp:
  - uid: Godot.GodotObject.CallDeferred(Godot.StringName,System.ReadOnlySpan{Godot.Variant})
    name: CallDeferred
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.CallDeferred(Godot.StringName,System.ReadOnlySpan{Godot.Variant})
    name: CallDeferred
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  - name: )
- uid: Godot.GodotObject.SetDeferred(Godot.StringName,Godot.Variant)
  commentId: M:Godot.GodotObject.SetDeferred(Godot.StringName,Godot.Variant)
  parent: Godot.GodotObject
  isExternal: true
  name: SetDeferred(StringName, Variant)
  nameWithType: GodotObject.SetDeferred(StringName, Variant)
  fullName: Godot.GodotObject.SetDeferred(Godot.StringName, Godot.Variant)
  spec.csharp:
  - uid: Godot.GodotObject.SetDeferred(Godot.StringName,Godot.Variant)
    name: SetDeferred
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.SetDeferred(Godot.StringName,Godot.Variant)
    name: SetDeferred
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.GodotObject.Callv(Godot.StringName,Godot.Collections.Array)
  commentId: M:Godot.GodotObject.Callv(Godot.StringName,Godot.Collections.Array)
  parent: Godot.GodotObject
  isExternal: true
  name: Callv(StringName, Array)
  nameWithType: GodotObject.Callv(StringName, Array)
  fullName: Godot.GodotObject.Callv(Godot.StringName, Godot.Collections.Array)
  spec.csharp:
  - uid: Godot.GodotObject.Callv(Godot.StringName,Godot.Collections.Array)
    name: Callv
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Collections.Array
    name: Array
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Callv(Godot.StringName,Godot.Collections.Array)
    name: Callv
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Collections.Array
    name: Array
    isExternal: true
  - name: )
- uid: Godot.GodotObject.HasMethod(Godot.StringName)
  commentId: M:Godot.GodotObject.HasMethod(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: HasMethod(StringName)
  nameWithType: GodotObject.HasMethod(StringName)
  fullName: Godot.GodotObject.HasMethod(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.HasMethod(Godot.StringName)
    name: HasMethod
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.HasMethod(Godot.StringName)
    name: HasMethod
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.GetMethodArgumentCount(Godot.StringName)
  commentId: M:Godot.GodotObject.GetMethodArgumentCount(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: GetMethodArgumentCount(StringName)
  nameWithType: GodotObject.GetMethodArgumentCount(StringName)
  fullName: Godot.GodotObject.GetMethodArgumentCount(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.GetMethodArgumentCount(Godot.StringName)
    name: GetMethodArgumentCount
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetMethodArgumentCount(Godot.StringName)
    name: GetMethodArgumentCount
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.HasSignal(Godot.StringName)
  commentId: M:Godot.GodotObject.HasSignal(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: HasSignal(StringName)
  nameWithType: GodotObject.HasSignal(StringName)
  fullName: Godot.GodotObject.HasSignal(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.HasSignal(Godot.StringName)
    name: HasSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.HasSignal(Godot.StringName)
    name: HasSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.GetSignalList
  commentId: M:Godot.GodotObject.GetSignalList
  parent: Godot.GodotObject
  isExternal: true
  name: GetSignalList()
  nameWithType: GodotObject.GetSignalList()
  fullName: Godot.GodotObject.GetSignalList()
  spec.csharp:
  - uid: Godot.GodotObject.GetSignalList
    name: GetSignalList
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetSignalList
    name: GetSignalList
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.GetSignalConnectionList(Godot.StringName)
  commentId: M:Godot.GodotObject.GetSignalConnectionList(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: GetSignalConnectionList(StringName)
  nameWithType: GodotObject.GetSignalConnectionList(StringName)
  fullName: Godot.GodotObject.GetSignalConnectionList(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.GetSignalConnectionList(Godot.StringName)
    name: GetSignalConnectionList
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetSignalConnectionList(Godot.StringName)
    name: GetSignalConnectionList
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.GetIncomingConnections
  commentId: M:Godot.GodotObject.GetIncomingConnections
  parent: Godot.GodotObject
  isExternal: true
  name: GetIncomingConnections()
  nameWithType: GodotObject.GetIncomingConnections()
  fullName: Godot.GodotObject.GetIncomingConnections()
  spec.csharp:
  - uid: Godot.GodotObject.GetIncomingConnections
    name: GetIncomingConnections
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetIncomingConnections
    name: GetIncomingConnections
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.Connect(Godot.StringName,Godot.Callable,System.UInt32)
  commentId: M:Godot.GodotObject.Connect(Godot.StringName,Godot.Callable,System.UInt32)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: Connect(StringName, Callable, uint)
  nameWithType: GodotObject.Connect(StringName, Callable, uint)
  fullName: Godot.GodotObject.Connect(Godot.StringName, Godot.Callable, uint)
  nameWithType.vb: GodotObject.Connect(StringName, Callable, UInteger)
  fullName.vb: Godot.GodotObject.Connect(Godot.StringName, Godot.Callable, UInteger)
  name.vb: Connect(StringName, Callable, UInteger)
  spec.csharp:
  - uid: Godot.GodotObject.Connect(Godot.StringName,Godot.Callable,System.UInt32)
    name: Connect
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Callable
    name: Callable
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Connect(Godot.StringName,Godot.Callable,System.UInt32)
    name: Connect
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Callable
    name: Callable
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: Godot.GodotObject.Disconnect(Godot.StringName,Godot.Callable)
  commentId: M:Godot.GodotObject.Disconnect(Godot.StringName,Godot.Callable)
  parent: Godot.GodotObject
  isExternal: true
  name: Disconnect(StringName, Callable)
  nameWithType: GodotObject.Disconnect(StringName, Callable)
  fullName: Godot.GodotObject.Disconnect(Godot.StringName, Godot.Callable)
  spec.csharp:
  - uid: Godot.GodotObject.Disconnect(Godot.StringName,Godot.Callable)
    name: Disconnect
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Callable
    name: Callable
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Disconnect(Godot.StringName,Godot.Callable)
    name: Disconnect
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Callable
    name: Callable
    isExternal: true
  - name: )
- uid: Godot.GodotObject.IsConnected(Godot.StringName,Godot.Callable)
  commentId: M:Godot.GodotObject.IsConnected(Godot.StringName,Godot.Callable)
  parent: Godot.GodotObject
  isExternal: true
  name: IsConnected(StringName, Callable)
  nameWithType: GodotObject.IsConnected(StringName, Callable)
  fullName: Godot.GodotObject.IsConnected(Godot.StringName, Godot.Callable)
  spec.csharp:
  - uid: Godot.GodotObject.IsConnected(Godot.StringName,Godot.Callable)
    name: IsConnected
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Callable
    name: Callable
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.IsConnected(Godot.StringName,Godot.Callable)
    name: IsConnected
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Callable
    name: Callable
    isExternal: true
  - name: )
- uid: Godot.GodotObject.HasConnections(Godot.StringName)
  commentId: M:Godot.GodotObject.HasConnections(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: HasConnections(StringName)
  nameWithType: GodotObject.HasConnections(StringName)
  fullName: Godot.GodotObject.HasConnections(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.HasConnections(Godot.StringName)
    name: HasConnections
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.HasConnections(Godot.StringName)
    name: HasConnections
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.SetBlockSignals(System.Boolean)
  commentId: M:Godot.GodotObject.SetBlockSignals(System.Boolean)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetBlockSignals(bool)
  nameWithType: GodotObject.SetBlockSignals(bool)
  fullName: Godot.GodotObject.SetBlockSignals(bool)
  nameWithType.vb: GodotObject.SetBlockSignals(Boolean)
  fullName.vb: Godot.GodotObject.SetBlockSignals(Boolean)
  name.vb: SetBlockSignals(Boolean)
  spec.csharp:
  - uid: Godot.GodotObject.SetBlockSignals(System.Boolean)
    name: SetBlockSignals
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.SetBlockSignals(System.Boolean)
    name: SetBlockSignals
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.GodotObject.IsBlockingSignals
  commentId: M:Godot.GodotObject.IsBlockingSignals
  parent: Godot.GodotObject
  isExternal: true
  name: IsBlockingSignals()
  nameWithType: GodotObject.IsBlockingSignals()
  fullName: Godot.GodotObject.IsBlockingSignals()
  spec.csharp:
  - uid: Godot.GodotObject.IsBlockingSignals
    name: IsBlockingSignals
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.IsBlockingSignals
    name: IsBlockingSignals
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.NotifyPropertyListChanged
  commentId: M:Godot.GodotObject.NotifyPropertyListChanged
  parent: Godot.GodotObject
  isExternal: true
  name: NotifyPropertyListChanged()
  nameWithType: GodotObject.NotifyPropertyListChanged()
  fullName: Godot.GodotObject.NotifyPropertyListChanged()
  spec.csharp:
  - uid: Godot.GodotObject.NotifyPropertyListChanged
    name: NotifyPropertyListChanged
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.NotifyPropertyListChanged
    name: NotifyPropertyListChanged
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.SetMessageTranslation(System.Boolean)
  commentId: M:Godot.GodotObject.SetMessageTranslation(System.Boolean)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetMessageTranslation(bool)
  nameWithType: GodotObject.SetMessageTranslation(bool)
  fullName: Godot.GodotObject.SetMessageTranslation(bool)
  nameWithType.vb: GodotObject.SetMessageTranslation(Boolean)
  fullName.vb: Godot.GodotObject.SetMessageTranslation(Boolean)
  name.vb: SetMessageTranslation(Boolean)
  spec.csharp:
  - uid: Godot.GodotObject.SetMessageTranslation(System.Boolean)
    name: SetMessageTranslation
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.SetMessageTranslation(System.Boolean)
    name: SetMessageTranslation
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.GodotObject.CanTranslateMessages
  commentId: M:Godot.GodotObject.CanTranslateMessages
  parent: Godot.GodotObject
  isExternal: true
  name: CanTranslateMessages()
  nameWithType: GodotObject.CanTranslateMessages()
  fullName: Godot.GodotObject.CanTranslateMessages()
  spec.csharp:
  - uid: Godot.GodotObject.CanTranslateMessages
    name: CanTranslateMessages
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.CanTranslateMessages
    name: CanTranslateMessages
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.Tr(Godot.StringName,Godot.StringName)
  commentId: M:Godot.GodotObject.Tr(Godot.StringName,Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: Tr(StringName, StringName)
  nameWithType: GodotObject.Tr(StringName, StringName)
  fullName: Godot.GodotObject.Tr(Godot.StringName, Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.Tr(Godot.StringName,Godot.StringName)
    name: Tr
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Tr(Godot.StringName,Godot.StringName)
    name: Tr
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.TrN(Godot.StringName,Godot.StringName,System.Int32,Godot.StringName)
  commentId: M:Godot.GodotObject.TrN(Godot.StringName,Godot.StringName,System.Int32,Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: TrN(StringName, StringName, int, StringName)
  nameWithType: GodotObject.TrN(StringName, StringName, int, StringName)
  fullName: Godot.GodotObject.TrN(Godot.StringName, Godot.StringName, int, Godot.StringName)
  nameWithType.vb: GodotObject.TrN(StringName, StringName, Integer, StringName)
  fullName.vb: Godot.GodotObject.TrN(Godot.StringName, Godot.StringName, Integer, Godot.StringName)
  name.vb: TrN(StringName, StringName, Integer, StringName)
  spec.csharp:
  - uid: Godot.GodotObject.TrN(Godot.StringName,Godot.StringName,System.Int32,Godot.StringName)
    name: TrN
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.TrN(Godot.StringName,Godot.StringName,System.Int32,Godot.StringName)
    name: TrN
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.GetTranslationDomain
  commentId: M:Godot.GodotObject.GetTranslationDomain
  parent: Godot.GodotObject
  isExternal: true
  name: GetTranslationDomain()
  nameWithType: GodotObject.GetTranslationDomain()
  fullName: Godot.GodotObject.GetTranslationDomain()
  spec.csharp:
  - uid: Godot.GodotObject.GetTranslationDomain
    name: GetTranslationDomain
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetTranslationDomain
    name: GetTranslationDomain
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.SetTranslationDomain(Godot.StringName)
  commentId: M:Godot.GodotObject.SetTranslationDomain(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: SetTranslationDomain(StringName)
  nameWithType: GodotObject.SetTranslationDomain(StringName)
  fullName: Godot.GodotObject.SetTranslationDomain(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.SetTranslationDomain(Godot.StringName)
    name: SetTranslationDomain
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.SetTranslationDomain(Godot.StringName)
    name: SetTranslationDomain
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.IsQueuedForDeletion
  commentId: M:Godot.GodotObject.IsQueuedForDeletion
  parent: Godot.GodotObject
  isExternal: true
  name: IsQueuedForDeletion()
  nameWithType: GodotObject.IsQueuedForDeletion()
  fullName: Godot.GodotObject.IsQueuedForDeletion()
  spec.csharp:
  - uid: Godot.GodotObject.IsQueuedForDeletion
    name: IsQueuedForDeletion
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.IsQueuedForDeletion
    name: IsQueuedForDeletion
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.CancelFree
  commentId: M:Godot.GodotObject.CancelFree
  parent: Godot.GodotObject
  isExternal: true
  name: CancelFree()
  nameWithType: GodotObject.CancelFree()
  fullName: Godot.GodotObject.CancelFree()
  spec.csharp:
  - uid: Godot.GodotObject.CancelFree
    name: CancelFree
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.CancelFree
    name: CancelFree
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.EmitSignalScriptChanged
  commentId: M:Godot.GodotObject.EmitSignalScriptChanged
  parent: Godot.GodotObject
  isExternal: true
  name: EmitSignalScriptChanged()
  nameWithType: GodotObject.EmitSignalScriptChanged()
  fullName: Godot.GodotObject.EmitSignalScriptChanged()
  spec.csharp:
  - uid: Godot.GodotObject.EmitSignalScriptChanged
    name: EmitSignalScriptChanged
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.EmitSignalScriptChanged
    name: EmitSignalScriptChanged
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.EmitSignalPropertyListChanged
  commentId: M:Godot.GodotObject.EmitSignalPropertyListChanged
  parent: Godot.GodotObject
  isExternal: true
  name: EmitSignalPropertyListChanged()
  nameWithType: GodotObject.EmitSignalPropertyListChanged()
  fullName: Godot.GodotObject.EmitSignalPropertyListChanged()
  spec.csharp:
  - uid: Godot.GodotObject.EmitSignalPropertyListChanged
    name: EmitSignalPropertyListChanged
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.EmitSignalPropertyListChanged
    name: EmitSignalPropertyListChanged
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.NativeInstance
  commentId: P:Godot.GodotObject.NativeInstance
  parent: Godot.GodotObject
  isExternal: true
  name: NativeInstance
  nameWithType: GodotObject.NativeInstance
  fullName: Godot.GodotObject.NativeInstance
- uid: Godot.GodotObject.ScriptChanged
  commentId: E:Godot.GodotObject.ScriptChanged
  parent: Godot.GodotObject
  isExternal: true
  name: ScriptChanged
  nameWithType: GodotObject.ScriptChanged
  fullName: Godot.GodotObject.ScriptChanged
- uid: Godot.GodotObject.PropertyListChanged
  commentId: E:Godot.GodotObject.PropertyListChanged
  parent: Godot.GodotObject
  isExternal: true
  name: PropertyListChanged
  nameWithType: GodotObject.PropertyListChanged
  fullName: Godot.GodotObject.PropertyListChanged
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Godot
  commentId: N:Godot
  isExternal: true
  name: Godot
  nameWithType: Godot
  fullName: Godot
- uid: Nebula.Serialization.INetSerializable`1
  commentId: T:Nebula.Serialization.INetSerializable`1
  isExternal: true
  href: Nebula.Serialization.INetSerializable-1.html
  name: INetSerializable<T>
  nameWithType: INetSerializable<T>
  fullName: Nebula.Serialization.INetSerializable<T>
  nameWithType.vb: INetSerializable(Of T)
  fullName.vb: Nebula.Serialization.INetSerializable(Of T)
  name.vb: INetSerializable(Of T)
  spec.csharp:
  - uid: Nebula.Serialization.INetSerializable`1
    name: INetSerializable
    isExternal: true
    href: Nebula.Serialization.INetSerializable-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Nebula.Serialization.INetSerializable`1
    name: INetSerializable
    isExternal: true
    href: Nebula.Serialization.INetSerializable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Nebula.Serialization
  commentId: N:Nebula.Serialization
  isExternal: true
  href: Nebula.html
  name: Nebula.Serialization
  nameWithType: Nebula.Serialization
  fullName: Nebula.Serialization
  spec.csharp:
  - uid: Nebula
    name: Nebula
    isExternal: true
    href: Nebula.html
  - name: .
  - uid: Nebula.Serialization
    name: Serialization
    isExternal: true
    href: Nebula.Serialization.html
  spec.vb:
  - uid: Nebula
    name: Nebula
    isExternal: true
    href: Nebula.html
  - name: .
  - uid: Nebula.Serialization
    name: Serialization
    isExternal: true
    href: Nebula.Serialization.html
- uid: Nebula.Serialization.IBsonSerializable`1
  commentId: T:Nebula.Serialization.IBsonSerializable`1
  isExternal: true
  href: Nebula.Serialization.IBsonSerializable-1.html
  name: IBsonSerializable<T>
  nameWithType: IBsonSerializable<T>
  fullName: Nebula.Serialization.IBsonSerializable<T>
  nameWithType.vb: IBsonSerializable(Of T)
  fullName.vb: Nebula.Serialization.IBsonSerializable(Of T)
  name.vb: IBsonSerializable(Of T)
  spec.csharp:
  - uid: Nebula.Serialization.IBsonSerializable`1
    name: IBsonSerializable
    isExternal: true
    href: Nebula.Serialization.IBsonSerializable-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Nebula.Serialization.IBsonSerializable`1
    name: IBsonSerializable
    isExternal: true
    href: Nebula.Serialization.IBsonSerializable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Godot.ENetPacketPeer
  commentId: T:Godot.ENetPacketPeer
  parent: Godot
  isExternal: true
  name: ENetPacketPeer
  nameWithType: ENetPacketPeer
  fullName: Godot.ENetPacketPeer
- uid: Nebula.NetPose3D.#ctor*
  commentId: Overload:Nebula.NetPose3D.#ctor
  isExternal: true
  href: Nebula.NetPose3D.html#Nebula_NetPose3D__ctor
  name: NetPose3D
  nameWithType: NetPose3D.NetPose3D
  fullName: Nebula.NetPose3D.NetPose3D
  nameWithType.vb: NetPose3D.New
  fullName.vb: Nebula.NetPose3D.New
  name.vb: New
- uid: Nebula.NetPose3D.ApplyDelta*
  commentId: Overload:Nebula.NetPose3D.ApplyDelta
  isExternal: true
  href: Nebula.NetPose3D.html#Nebula_NetPose3D_ApplyDelta_Godot_Vector3_Godot_Vector3_
  name: ApplyDelta
  nameWithType: NetPose3D.ApplyDelta
  fullName: Nebula.NetPose3D.ApplyDelta
- uid: Godot.Vector3
  commentId: T:Godot.Vector3
  parent: Godot
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: Godot.Vector3
- uid: Nebula.NetPose3D.ApplyKeyframe*
  commentId: Overload:Nebula.NetPose3D.ApplyKeyframe
  isExternal: true
  href: Nebula.NetPose3D.html#Nebula_NetPose3D_ApplyKeyframe_Godot_Vector3_Godot_Vector3_
  name: ApplyKeyframe
  nameWithType: NetPose3D.ApplyKeyframe
  fullName: Nebula.NetPose3D.ApplyKeyframe
- uid: Nebula.NetPose3D.NetworkProcess*
  commentId: Overload:Nebula.NetPose3D.NetworkProcess
  isExternal: true
  href: Nebula.NetPose3D.html#Nebula_NetPose3D_NetworkProcess_Nebula_WorldRunner_
  name: NetworkProcess
  nameWithType: NetPose3D.NetworkProcess
  fullName: Nebula.NetPose3D.NetworkProcess
- uid: Nebula.WorldRunner
  commentId: T:Nebula.WorldRunner
  parent: Nebula
  isExternal: true
  href: Nebula.WorldRunner.html
  name: WorldRunner
  nameWithType: WorldRunner
  fullName: Nebula.WorldRunner
- uid: Nebula.NetPose3D.NetworkSerialize*
  commentId: Overload:Nebula.NetPose3D.NetworkSerialize
  isExternal: true
  href: Nebula.NetPose3D.html#Nebula_NetPose3D_NetworkSerialize_Nebula_WorldRunner_Godot_ENetPacketPeer_Nebula_NetPose3D_
  name: NetworkSerialize
  nameWithType: NetPose3D.NetworkSerialize
  fullName: Nebula.NetPose3D.NetworkSerialize
- uid: Nebula.Serialization.INetSerializable{Nebula.NetPose3D}.NetworkSerialize(Nebula.WorldRunner,Godot.ENetPacketPeer,Nebula.NetPose3D)
  commentId: M:Nebula.Serialization.INetSerializable{Nebula.NetPose3D}.NetworkSerialize(Nebula.WorldRunner,Godot.ENetPacketPeer,Nebula.NetPose3D)
  parent: Nebula.Serialization.INetSerializable{Nebula.NetPose3D}
  definition: Nebula.Serialization.INetSerializable`1.NetworkSerialize(Nebula.WorldRunner,Godot.ENetPacketPeer,`0)
  href: Nebula.Serialization.INetSerializable-1.html#Nebula_Serialization_INetSerializable_1_NetworkSerialize_Nebula_WorldRunner_Godot_ENetPacketPeer__0_
  name: NetworkSerialize(WorldRunner, ENetPacketPeer, NetPose3D)
  nameWithType: INetSerializable<NetPose3D>.NetworkSerialize(WorldRunner, ENetPacketPeer, NetPose3D)
  fullName: Nebula.Serialization.INetSerializable<Nebula.NetPose3D>.NetworkSerialize(Nebula.WorldRunner, Godot.ENetPacketPeer, Nebula.NetPose3D)
  nameWithType.vb: INetSerializable(Of NetPose3D).NetworkSerialize(WorldRunner, ENetPacketPeer, NetPose3D)
  fullName.vb: Nebula.Serialization.INetSerializable(Of Nebula.NetPose3D).NetworkSerialize(Nebula.WorldRunner, Godot.ENetPacketPeer, Nebula.NetPose3D)
  spec.csharp:
  - uid: Nebula.Serialization.INetSerializable{Nebula.NetPose3D}.NetworkSerialize(Nebula.WorldRunner,Godot.ENetPacketPeer,Nebula.NetPose3D)
    name: NetworkSerialize
    isExternal: true
    href: Nebula.Serialization.INetSerializable-1.html#Nebula_Serialization_INetSerializable_1_NetworkSerialize_Nebula_WorldRunner_Godot_ENetPacketPeer__0_
  - name: (
  - uid: Nebula.WorldRunner
    name: WorldRunner
    isExternal: true
    href: Nebula.WorldRunner.html
  - name: ','
  - name: " "
  - uid: Godot.ENetPacketPeer
    name: ENetPacketPeer
    isExternal: true
  - name: ','
  - name: " "
  - uid: Nebula.NetPose3D
    name: NetPose3D
    isExternal: true
    href: Nebula.NetPose3D.html
  - name: )
  spec.vb:
  - uid: Nebula.Serialization.INetSerializable{Nebula.NetPose3D}.NetworkSerialize(Nebula.WorldRunner,Godot.ENetPacketPeer,Nebula.NetPose3D)
    name: NetworkSerialize
    isExternal: true
    href: Nebula.Serialization.INetSerializable-1.html#Nebula_Serialization_INetSerializable_1_NetworkSerialize_Nebula_WorldRunner_Godot_ENetPacketPeer__0_
  - name: (
  - uid: Nebula.WorldRunner
    name: WorldRunner
    isExternal: true
    href: Nebula.WorldRunner.html
  - name: ','
  - name: " "
  - uid: Godot.ENetPacketPeer
    name: ENetPacketPeer
    isExternal: true
  - name: ','
  - name: " "
  - uid: Nebula.NetPose3D
    name: NetPose3D
    isExternal: true
    href: Nebula.NetPose3D.html
  - name: )
- uid: Nebula.NetPose3D
  commentId: T:Nebula.NetPose3D
  parent: Nebula
  isExternal: true
  href: Nebula.NetPose3D.html
  name: NetPose3D
  nameWithType: NetPose3D
  fullName: Nebula.NetPose3D
- uid: Nebula.Serialization.HLBuffer
  commentId: T:Nebula.Serialization.HLBuffer
  parent: Nebula.Serialization
  isExternal: true
  href: Nebula.Serialization.HLBuffer.html
  name: HLBuffer
  nameWithType: HLBuffer
  fullName: Nebula.Serialization.HLBuffer
- uid: Nebula.Serialization.INetSerializable`1.NetworkSerialize(Nebula.WorldRunner,Godot.ENetPacketPeer,`0)
  commentId: M:Nebula.Serialization.INetSerializable`1.NetworkSerialize(Nebula.WorldRunner,Godot.ENetPacketPeer,`0)
  isExternal: true
  href: Nebula.Serialization.INetSerializable-1.html#Nebula_Serialization_INetSerializable_1_NetworkSerialize_Nebula_WorldRunner_Godot_ENetPacketPeer__0_
  name: NetworkSerialize(WorldRunner, ENetPacketPeer, T)
  nameWithType: INetSerializable<T>.NetworkSerialize(WorldRunner, ENetPacketPeer, T)
  fullName: Nebula.Serialization.INetSerializable<T>.NetworkSerialize(Nebula.WorldRunner, Godot.ENetPacketPeer, T)
  nameWithType.vb: INetSerializable(Of T).NetworkSerialize(WorldRunner, ENetPacketPeer, T)
  fullName.vb: Nebula.Serialization.INetSerializable(Of T).NetworkSerialize(Nebula.WorldRunner, Godot.ENetPacketPeer, T)
  spec.csharp:
  - uid: Nebula.Serialization.INetSerializable`1.NetworkSerialize(Nebula.WorldRunner,Godot.ENetPacketPeer,`0)
    name: NetworkSerialize
    isExternal: true
    href: Nebula.Serialization.INetSerializable-1.html#Nebula_Serialization_INetSerializable_1_NetworkSerialize_Nebula_WorldRunner_Godot_ENetPacketPeer__0_
  - name: (
  - uid: Nebula.WorldRunner
    name: WorldRunner
    isExternal: true
    href: Nebula.WorldRunner.html
  - name: ','
  - name: " "
  - uid: Godot.ENetPacketPeer
    name: ENetPacketPeer
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Nebula.Serialization.INetSerializable`1.NetworkSerialize(Nebula.WorldRunner,Godot.ENetPacketPeer,`0)
    name: NetworkSerialize
    isExternal: true
    href: Nebula.Serialization.INetSerializable-1.html#Nebula_Serialization_INetSerializable_1_NetworkSerialize_Nebula_WorldRunner_Godot_ENetPacketPeer__0_
  - name: (
  - uid: Nebula.WorldRunner
    name: WorldRunner
    isExternal: true
    href: Nebula.WorldRunner.html
  - name: ','
  - name: " "
  - uid: Godot.ENetPacketPeer
    name: ENetPacketPeer
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Nebula.NetPose3D.GetDeserializeContext*
  commentId: Overload:Nebula.NetPose3D.GetDeserializeContext
  isExternal: true
  href: Nebula.NetPose3D.html#Nebula_NetPose3D_GetDeserializeContext_Nebula_NetPose3D_
  name: GetDeserializeContext
  nameWithType: NetPose3D.GetDeserializeContext
  fullName: Nebula.NetPose3D.GetDeserializeContext
- uid: Nebula.Serialization.INetSerializable{Nebula.NetPose3D}.GetDeserializeContext(Nebula.NetPose3D)
  commentId: M:Nebula.Serialization.INetSerializable{Nebula.NetPose3D}.GetDeserializeContext(Nebula.NetPose3D)
  parent: Nebula.Serialization.INetSerializable{Nebula.NetPose3D}
  definition: Nebula.Serialization.INetSerializable`1.GetDeserializeContext(`0)
  href: Nebula.Serialization.INetSerializable-1.html#Nebula_Serialization_INetSerializable_1_GetDeserializeContext__0_
  name: GetDeserializeContext(NetPose3D)
  nameWithType: INetSerializable<NetPose3D>.GetDeserializeContext(NetPose3D)
  fullName: Nebula.Serialization.INetSerializable<Nebula.NetPose3D>.GetDeserializeContext(Nebula.NetPose3D)
  nameWithType.vb: INetSerializable(Of NetPose3D).GetDeserializeContext(NetPose3D)
  fullName.vb: Nebula.Serialization.INetSerializable(Of Nebula.NetPose3D).GetDeserializeContext(Nebula.NetPose3D)
  spec.csharp:
  - uid: Nebula.Serialization.INetSerializable{Nebula.NetPose3D}.GetDeserializeContext(Nebula.NetPose3D)
    name: GetDeserializeContext
    isExternal: true
    href: Nebula.Serialization.INetSerializable-1.html#Nebula_Serialization_INetSerializable_1_GetDeserializeContext__0_
  - name: (
  - uid: Nebula.NetPose3D
    name: NetPose3D
    isExternal: true
    href: Nebula.NetPose3D.html
  - name: )
  spec.vb:
  - uid: Nebula.Serialization.INetSerializable{Nebula.NetPose3D}.GetDeserializeContext(Nebula.NetPose3D)
    name: GetDeserializeContext
    isExternal: true
    href: Nebula.Serialization.INetSerializable-1.html#Nebula_Serialization_INetSerializable_1_GetDeserializeContext__0_
  - name: (
  - uid: Nebula.NetPose3D
    name: NetPose3D
    isExternal: true
    href: Nebula.NetPose3D.html
  - name: )
- uid: Godot.Variant
  commentId: T:Godot.Variant
  parent: Godot
  isExternal: true
  name: Variant
  nameWithType: Variant
  fullName: Godot.Variant
- uid: Nebula.Serialization.INetSerializable`1.GetDeserializeContext(`0)
  commentId: M:Nebula.Serialization.INetSerializable`1.GetDeserializeContext(`0)
  isExternal: true
  href: Nebula.Serialization.INetSerializable-1.html#Nebula_Serialization_INetSerializable_1_GetDeserializeContext__0_
  name: GetDeserializeContext(T)
  nameWithType: INetSerializable<T>.GetDeserializeContext(T)
  fullName: Nebula.Serialization.INetSerializable<T>.GetDeserializeContext(T)
  nameWithType.vb: INetSerializable(Of T).GetDeserializeContext(T)
  fullName.vb: Nebula.Serialization.INetSerializable(Of T).GetDeserializeContext(T)
  spec.csharp:
  - uid: Nebula.Serialization.INetSerializable`1.GetDeserializeContext(`0)
    name: GetDeserializeContext
    isExternal: true
    href: Nebula.Serialization.INetSerializable-1.html#Nebula_Serialization_INetSerializable_1_GetDeserializeContext__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Nebula.Serialization.INetSerializable`1.GetDeserializeContext(`0)
    name: GetDeserializeContext
    isExternal: true
    href: Nebula.Serialization.INetSerializable-1.html#Nebula_Serialization_INetSerializable_1_GetDeserializeContext__0_
  - name: (
  - name: T
  - name: )
- uid: Nebula.NetPose3D.NetworkDeserialize*
  commentId: Overload:Nebula.NetPose3D.NetworkDeserialize
  isExternal: true
  href: Nebula.NetPose3D.html#Nebula_NetPose3D_NetworkDeserialize_Nebula_WorldRunner_Godot_ENetPacketPeer_Nebula_Serialization_HLBuffer_Godot_Variant_
  name: NetworkDeserialize
  nameWithType: NetPose3D.NetworkDeserialize
  fullName: Nebula.NetPose3D.NetworkDeserialize
- uid: Nebula.Serialization.INetSerializable{Nebula.NetPose3D}.NetworkDeserialize(Nebula.WorldRunner,Godot.ENetPacketPeer,Nebula.Serialization.HLBuffer,Godot.Variant)
  commentId: M:Nebula.Serialization.INetSerializable{Nebula.NetPose3D}.NetworkDeserialize(Nebula.WorldRunner,Godot.ENetPacketPeer,Nebula.Serialization.HLBuffer,Godot.Variant)
  parent: Nebula.Serialization.INetSerializable{Nebula.NetPose3D}
  definition: Nebula.Serialization.INetSerializable`1.NetworkDeserialize(Nebula.WorldRunner,Godot.ENetPacketPeer,Nebula.Serialization.HLBuffer,Godot.Variant)
  href: Nebula.Serialization.INetSerializable-1.html#Nebula_Serialization_INetSerializable_1_NetworkDeserialize_Nebula_WorldRunner_Godot_ENetPacketPeer_Nebula_Serialization_HLBuffer_Godot_Variant_
  name: NetworkDeserialize(WorldRunner, ENetPacketPeer, HLBuffer, Variant)
  nameWithType: INetSerializable<NetPose3D>.NetworkDeserialize(WorldRunner, ENetPacketPeer, HLBuffer, Variant)
  fullName: Nebula.Serialization.INetSerializable<Nebula.NetPose3D>.NetworkDeserialize(Nebula.WorldRunner, Godot.ENetPacketPeer, Nebula.Serialization.HLBuffer, Godot.Variant)
  nameWithType.vb: INetSerializable(Of NetPose3D).NetworkDeserialize(WorldRunner, ENetPacketPeer, HLBuffer, Variant)
  fullName.vb: Nebula.Serialization.INetSerializable(Of Nebula.NetPose3D).NetworkDeserialize(Nebula.WorldRunner, Godot.ENetPacketPeer, Nebula.Serialization.HLBuffer, Godot.Variant)
  spec.csharp:
  - uid: Nebula.Serialization.INetSerializable{Nebula.NetPose3D}.NetworkDeserialize(Nebula.WorldRunner,Godot.ENetPacketPeer,Nebula.Serialization.HLBuffer,Godot.Variant)
    name: NetworkDeserialize
    isExternal: true
    href: Nebula.Serialization.INetSerializable-1.html#Nebula_Serialization_INetSerializable_1_NetworkDeserialize_Nebula_WorldRunner_Godot_ENetPacketPeer_Nebula_Serialization_HLBuffer_Godot_Variant_
  - name: (
  - uid: Nebula.WorldRunner
    name: WorldRunner
    isExternal: true
    href: Nebula.WorldRunner.html
  - name: ','
  - name: " "
  - uid: Godot.ENetPacketPeer
    name: ENetPacketPeer
    isExternal: true
  - name: ','
  - name: " "
  - uid: Nebula.Serialization.HLBuffer
    name: HLBuffer
    isExternal: true
    href: Nebula.Serialization.HLBuffer.html
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Nebula.Serialization.INetSerializable{Nebula.NetPose3D}.NetworkDeserialize(Nebula.WorldRunner,Godot.ENetPacketPeer,Nebula.Serialization.HLBuffer,Godot.Variant)
    name: NetworkDeserialize
    isExternal: true
    href: Nebula.Serialization.INetSerializable-1.html#Nebula_Serialization_INetSerializable_1_NetworkDeserialize_Nebula_WorldRunner_Godot_ENetPacketPeer_Nebula_Serialization_HLBuffer_Godot_Variant_
  - name: (
  - uid: Nebula.WorldRunner
    name: WorldRunner
    isExternal: true
    href: Nebula.WorldRunner.html
  - name: ','
  - name: " "
  - uid: Godot.ENetPacketPeer
    name: ENetPacketPeer
    isExternal: true
  - name: ','
  - name: " "
  - uid: Nebula.Serialization.HLBuffer
    name: HLBuffer
    isExternal: true
    href: Nebula.Serialization.HLBuffer.html
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Nebula.Serialization.INetSerializable`1.NetworkDeserialize(Nebula.WorldRunner,Godot.ENetPacketPeer,Nebula.Serialization.HLBuffer,Godot.Variant)
  commentId: M:Nebula.Serialization.INetSerializable`1.NetworkDeserialize(Nebula.WorldRunner,Godot.ENetPacketPeer,Nebula.Serialization.HLBuffer,Godot.Variant)
  isExternal: true
  href: Nebula.Serialization.INetSerializable-1.html#Nebula_Serialization_INetSerializable_1_NetworkDeserialize_Nebula_WorldRunner_Godot_ENetPacketPeer_Nebula_Serialization_HLBuffer_Godot_Variant_
  name: NetworkDeserialize(WorldRunner, ENetPacketPeer, HLBuffer, Variant)
  nameWithType: INetSerializable<T>.NetworkDeserialize(WorldRunner, ENetPacketPeer, HLBuffer, Variant)
  fullName: Nebula.Serialization.INetSerializable<T>.NetworkDeserialize(Nebula.WorldRunner, Godot.ENetPacketPeer, Nebula.Serialization.HLBuffer, Godot.Variant)
  nameWithType.vb: INetSerializable(Of T).NetworkDeserialize(WorldRunner, ENetPacketPeer, HLBuffer, Variant)
  fullName.vb: Nebula.Serialization.INetSerializable(Of T).NetworkDeserialize(Nebula.WorldRunner, Godot.ENetPacketPeer, Nebula.Serialization.HLBuffer, Godot.Variant)
  spec.csharp:
  - uid: Nebula.Serialization.INetSerializable`1.NetworkDeserialize(Nebula.WorldRunner,Godot.ENetPacketPeer,Nebula.Serialization.HLBuffer,Godot.Variant)
    name: NetworkDeserialize
    isExternal: true
    href: Nebula.Serialization.INetSerializable-1.html#Nebula_Serialization_INetSerializable_1_NetworkDeserialize_Nebula_WorldRunner_Godot_ENetPacketPeer_Nebula_Serialization_HLBuffer_Godot_Variant_
  - name: (
  - uid: Nebula.WorldRunner
    name: WorldRunner
    isExternal: true
    href: Nebula.WorldRunner.html
  - name: ','
  - name: " "
  - uid: Godot.ENetPacketPeer
    name: ENetPacketPeer
    isExternal: true
  - name: ','
  - name: " "
  - uid: Nebula.Serialization.HLBuffer
    name: HLBuffer
    isExternal: true
    href: Nebula.Serialization.HLBuffer.html
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Nebula.Serialization.INetSerializable`1.NetworkDeserialize(Nebula.WorldRunner,Godot.ENetPacketPeer,Nebula.Serialization.HLBuffer,Godot.Variant)
    name: NetworkDeserialize
    isExternal: true
    href: Nebula.Serialization.INetSerializable-1.html#Nebula_Serialization_INetSerializable_1_NetworkDeserialize_Nebula_WorldRunner_Godot_ENetPacketPeer_Nebula_Serialization_HLBuffer_Godot_Variant_
  - name: (
  - uid: Nebula.WorldRunner
    name: WorldRunner
    isExternal: true
    href: Nebula.WorldRunner.html
  - name: ','
  - name: " "
  - uid: Godot.ENetPacketPeer
    name: ENetPacketPeer
    isExternal: true
  - name: ','
  - name: " "
  - uid: Nebula.Serialization.HLBuffer
    name: HLBuffer
    isExternal: true
    href: Nebula.Serialization.HLBuffer.html
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Nebula.NetPose3D.BsonDeserialize*
  commentId: Overload:Nebula.NetPose3D.BsonDeserialize
  isExternal: true
  href: Nebula.NetPose3D.html#Nebula_NetPose3D_BsonDeserialize_Godot_Variant_System_Byte___Nebula_NetPose3D_
  name: BsonDeserialize
  nameWithType: NetPose3D.BsonDeserialize
  fullName: Nebula.NetPose3D.BsonDeserialize
- uid: Nebula.Serialization.IBsonSerializable{Nebula.NetPose3D}.BsonDeserialize(Godot.Variant,System.Byte[],Nebula.NetPose3D)
  commentId: M:Nebula.Serialization.IBsonSerializable{Nebula.NetPose3D}.BsonDeserialize(Godot.Variant,System.Byte[],Nebula.NetPose3D)
  parent: Nebula.Serialization.IBsonSerializable{Nebula.NetPose3D}
  definition: Nebula.Serialization.IBsonSerializable`1.BsonDeserialize(Godot.Variant,System.Byte[],`0)
  href: Nebula.Serialization.IBsonSerializable-1.html#Nebula_Serialization_IBsonSerializable_1_BsonDeserialize_Godot_Variant_System_Byte____0_
  name: BsonDeserialize(Variant, byte[], NetPose3D)
  nameWithType: IBsonSerializable<NetPose3D>.BsonDeserialize(Variant, byte[], NetPose3D)
  fullName: Nebula.Serialization.IBsonSerializable<Nebula.NetPose3D>.BsonDeserialize(Godot.Variant, byte[], Nebula.NetPose3D)
  nameWithType.vb: IBsonSerializable(Of NetPose3D).BsonDeserialize(Variant, Byte(), NetPose3D)
  fullName.vb: Nebula.Serialization.IBsonSerializable(Of Nebula.NetPose3D).BsonDeserialize(Godot.Variant, Byte(), Nebula.NetPose3D)
  name.vb: BsonDeserialize(Variant, Byte(), NetPose3D)
  spec.csharp:
  - uid: Nebula.Serialization.IBsonSerializable{Nebula.NetPose3D}.BsonDeserialize(Godot.Variant,System.Byte[],Nebula.NetPose3D)
    name: BsonDeserialize
    isExternal: true
    href: Nebula.Serialization.IBsonSerializable-1.html#Nebula_Serialization_IBsonSerializable_1_BsonDeserialize_Godot_Variant_System_Byte____0_
  - name: (
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Nebula.NetPose3D
    name: NetPose3D
    isExternal: true
    href: Nebula.NetPose3D.html
  - name: )
  spec.vb:
  - uid: Nebula.Serialization.IBsonSerializable{Nebula.NetPose3D}.BsonDeserialize(Godot.Variant,System.Byte[],Nebula.NetPose3D)
    name: BsonDeserialize
    isExternal: true
    href: Nebula.Serialization.IBsonSerializable-1.html#Nebula_Serialization_IBsonSerializable_1_BsonDeserialize_Godot_Variant_System_Byte____0_
  - name: (
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Nebula.NetPose3D
    name: NetPose3D
    isExternal: true
    href: Nebula.NetPose3D.html
  - name: )
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: Nebula.Serialization.IBsonSerializable`1.BsonDeserialize(Godot.Variant,System.Byte[],`0)
  commentId: M:Nebula.Serialization.IBsonSerializable`1.BsonDeserialize(Godot.Variant,System.Byte[],`0)
  isExternal: true
  href: Nebula.Serialization.IBsonSerializable-1.html#Nebula_Serialization_IBsonSerializable_1_BsonDeserialize_Godot_Variant_System_Byte____0_
  name: BsonDeserialize(Variant, byte[], T)
  nameWithType: IBsonSerializable<T>.BsonDeserialize(Variant, byte[], T)
  fullName: Nebula.Serialization.IBsonSerializable<T>.BsonDeserialize(Godot.Variant, byte[], T)
  nameWithType.vb: IBsonSerializable(Of T).BsonDeserialize(Variant, Byte(), T)
  fullName.vb: Nebula.Serialization.IBsonSerializable(Of T).BsonDeserialize(Godot.Variant, Byte(), T)
  name.vb: BsonDeserialize(Variant, Byte(), T)
  spec.csharp:
  - uid: Nebula.Serialization.IBsonSerializable`1.BsonDeserialize(Godot.Variant,System.Byte[],`0)
    name: BsonDeserialize
    isExternal: true
    href: Nebula.Serialization.IBsonSerializable-1.html#Nebula_Serialization_IBsonSerializable_1_BsonDeserialize_Godot_Variant_System_Byte____0_
  - name: (
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Nebula.Serialization.IBsonSerializable`1.BsonDeserialize(Godot.Variant,System.Byte[],`0)
    name: BsonDeserialize
    isExternal: true
    href: Nebula.Serialization.IBsonSerializable-1.html#Nebula_Serialization_IBsonSerializable_1_BsonDeserialize_Godot_Variant_System_Byte____0_
  - name: (
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Nebula.NetPose3D.BsonSerialize*
  commentId: Overload:Nebula.NetPose3D.BsonSerialize
  isExternal: true
  href: Nebula.NetPose3D.html#Nebula_NetPose3D_BsonSerialize_Godot_Variant_
  name: BsonSerialize
  nameWithType: NetPose3D.BsonSerialize
  fullName: Nebula.NetPose3D.BsonSerialize
- uid: Nebula.Serialization.IBsonSerializableBase.BsonSerialize(Godot.Variant)
  commentId: M:Nebula.Serialization.IBsonSerializableBase.BsonSerialize(Godot.Variant)
  parent: Nebula.Serialization.IBsonSerializableBase
  isExternal: true
  href: Nebula.Serialization.IBsonSerializableBase.html#Nebula_Serialization_IBsonSerializableBase_BsonSerialize_Godot_Variant_
  name: BsonSerialize(Variant)
  nameWithType: IBsonSerializableBase.BsonSerialize(Variant)
  fullName: Nebula.Serialization.IBsonSerializableBase.BsonSerialize(Godot.Variant)
  spec.csharp:
  - uid: Nebula.Serialization.IBsonSerializableBase.BsonSerialize(Godot.Variant)
    name: BsonSerialize
    isExternal: true
    href: Nebula.Serialization.IBsonSerializableBase.html#Nebula_Serialization_IBsonSerializableBase_BsonSerialize_Godot_Variant_
  - name: (
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Nebula.Serialization.IBsonSerializableBase.BsonSerialize(Godot.Variant)
    name: BsonSerialize
    isExternal: true
    href: Nebula.Serialization.IBsonSerializableBase.html#Nebula_Serialization_IBsonSerializableBase_BsonSerialize_Godot_Variant_
  - name: (
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: MongoDB.Bson.BsonValue
  commentId: T:MongoDB.Bson.BsonValue
  parent: MongoDB.Bson
  isExternal: true
  name: BsonValue
  nameWithType: BsonValue
  fullName: MongoDB.Bson.BsonValue
- uid: MongoDB.Bson
  commentId: N:MongoDB.Bson
  isExternal: true
  name: MongoDB.Bson
  nameWithType: MongoDB.Bson
  fullName: MongoDB.Bson
  spec.csharp:
  - uid: MongoDB
    name: MongoDB
    isExternal: true
  - name: .
  - uid: MongoDB.Bson
    name: Bson
    isExternal: true
  spec.vb:
  - uid: MongoDB
    name: MongoDB
    isExternal: true
  - name: .
  - uid: MongoDB.Bson
    name: Bson
    isExternal: true
- uid: Nebula.NetPose3D.EmitSignalOnChange*
  commentId: Overload:Nebula.NetPose3D.EmitSignalOnChange
  isExternal: true
  href: Nebula.NetPose3D.html#Nebula_NetPose3D_EmitSignalOnChange
  name: EmitSignalOnChange
  nameWithType: NetPose3D.EmitSignalOnChange
  fullName: Nebula.NetPose3D.EmitSignalOnChange
- uid: Nebula.NetPose3D.Position*
  commentId: Overload:Nebula.NetPose3D.Position
  isExternal: true
  href: Nebula.NetPose3D.html#Nebula_NetPose3D_Position
  name: Position
  nameWithType: NetPose3D.Position
  fullName: Nebula.NetPose3D.Position
- uid: Nebula.NetPose3D.Rotation*
  commentId: Overload:Nebula.NetPose3D.Rotation
  isExternal: true
  href: Nebula.NetPose3D.html#Nebula_NetPose3D_Rotation
  name: Rotation
  nameWithType: NetPose3D.Rotation
  fullName: Nebula.NetPose3D.Rotation
- uid: Nebula.NetPose3D.ClientState*
  commentId: Overload:Nebula.NetPose3D.ClientState
  isExternal: true
  href: Nebula.NetPose3D.html#Nebula_NetPose3D_ClientState
  name: ClientState
  nameWithType: NetPose3D.ClientState
  fullName: Nebula.NetPose3D.ClientState
- uid: Nebula.NetPose3D.ChangeType
  commentId: T:Nebula.NetPose3D.ChangeType
  parent: Nebula
  isExternal: true
  href: Nebula.NetPose3D.html
  name: NetPose3D.ChangeType
  nameWithType: NetPose3D.ChangeType
  fullName: Nebula.NetPose3D.ChangeType
  spec.csharp:
  - uid: Nebula.NetPose3D
    name: NetPose3D
    isExternal: true
    href: Nebula.NetPose3D.html
  - name: .
  - uid: Nebula.NetPose3D.ChangeType
    name: ChangeType
    isExternal: true
    href: Nebula.NetPose3D.ChangeType.html
  spec.vb:
  - uid: Nebula.NetPose3D
    name: NetPose3D
    isExternal: true
    href: Nebula.NetPose3D.html
  - name: .
  - uid: Nebula.NetPose3D.ChangeType
    name: ChangeType
    isExternal: true
    href: Nebula.NetPose3D.ChangeType.html
- uid: Nebula.NetPose3D.OnChangeEventHandler
  commentId: T:Nebula.NetPose3D.OnChangeEventHandler
  parent: Nebula
  isExternal: true
  href: Nebula.NetPose3D.html
  name: NetPose3D.OnChangeEventHandler
  nameWithType: NetPose3D.OnChangeEventHandler
  fullName: Nebula.NetPose3D.OnChangeEventHandler
  spec.csharp:
  - uid: Nebula.NetPose3D
    name: NetPose3D
    isExternal: true
    href: Nebula.NetPose3D.html
  - name: .
  - uid: Nebula.NetPose3D.OnChangeEventHandler
    name: OnChangeEventHandler
    isExternal: true
    href: Nebula.NetPose3D.OnChangeEventHandler.html
  spec.vb:
  - uid: Nebula.NetPose3D
    name: NetPose3D
    isExternal: true
    href: Nebula.NetPose3D.html
  - name: .
  - uid: Nebula.NetPose3D.OnChangeEventHandler
    name: OnChangeEventHandler
    isExternal: true
    href: Nebula.NetPose3D.OnChangeEventHandler.html
